// Title:        ImpactedSwapAudit
// Author:       Generate code
// Company:      
// Description:  This class was generated by the XML-Broker Developer Console
// Schema name:  /home/anthony/workspace/SynthesisWS/schema/Synthesis.xsd
// Java SDK:     

package com.db.ess.synthesis.dvo;

import java.util.Date;
import java.io.IOException;

import org.adaptinet.sdk.adaptinetex.FastCacheException;
import org.adaptinet.sdk.fastcache.CacheServer;
import org.adaptinet.sdk.fastcache.DataArray;
import org.adaptinet.sdk.fastcache.DataItem;
import org.adaptinet.sdk.fastcache.FastCacheDVOBase;

public class ImpactedSwapAudit implements FastCacheDVOBase  {
	public Date getchangeApplyTime() { 
		return _changeApplyTime;
	}
	public void setchangeApplyTime(Date newValue) { 
		_changeApplyTime = newValue;
	}
	public String getbook() {
		if(_book!=null) {
			return new String(_book);
		}
		else {
			return null;
		}
	}
	public void setbook(String newValue) {
		_book = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getdivId() {
		return _divId;
	}
	public void setdivId(int newValue) {
		_divId = newValue;
	}
	public String getinstitution() {
		if(_institution!=null) {
			return new String(_institution);
		}
		else {
			return null;
		}
	}
	public void setinstitution(String newValue) {
		_institution = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getlegalEntity() {
		if(_legalEntity!=null) {
			return new String(_legalEntity);
		}
		else {
			return null;
		}
	}
	public void setlegalEntity(String newValue) {
		_legalEntity = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getswapNumber() {
		return _swapNumber;
	}
	public void setswapNumber(int newValue) {
		_swapNumber = newValue;
	}
	public String getticker() {
		if(_ticker!=null) {
			return new String(_ticker);
		}
		else {
			return null;
		}
	}
	public void setticker(String newValue) {
		_ticker = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getpreChngDivCcy() {
		if(_preChngDivCcy!=null) {
			return new String(_preChngDivCcy);
		}
		else {
			return null;
		}
	}
	public void setpreChngDivCcy(String newValue) {
		_preChngDivCcy = newValue!=null ? newValue.toCharArray() : null;
	}
	public float getpreChngNetDivRate() {
		return _preChngNetDivRate;
	}
	public void setpreChngNetDivRate(float newValue) {
		_preChngNetDivRate = newValue;
	}
	public float getpreChngGrsDivRate() {
		return _preChngGrsDivRate;
	}
	public void setpreChngGrsDivRate(float newValue) {
		_preChngGrsDivRate = newValue;
	}
	public String getcurrDivCcy() {
		if(_currDivCcy!=null) {
			return new String(_currDivCcy);
		}
		else {
			return null;
		}
	}
	public void setcurrDivCcy(String newValue) {
		_currDivCcy = newValue!=null ? newValue.toCharArray() : null;
	}
	public float getcurrNetDivRate() {
		return _currNetDivRate;
	}
	public void setcurrNetDivRate(float newValue) {
		_currNetDivRate = newValue;
	}
	public float getcurrGrsDivRate() {
		return _currGrsDivRate;
	}
	public void setcurrGrsDivRate(float newValue) {
		_currGrsDivRate = newValue;
	}
	public String getuserName() {
		if(_userName!=null) {
			return new String(_userName);
		}
		else {
			return null;
		}
	}
	public void setuserName(String newValue) {
		_userName = newValue!=null ? newValue.toCharArray() : null;
	}
	public void putToCache(String key, CacheServer server) throws FastCacheException {
		DataArray da = writeCache();
		item.putDataArray(da);
		server.putValue(key, item);
		item.DataItemClear();
	}
	public void getFromCache(String key, CacheServer server) throws FastCacheException {
		DataItem item = server.getValue(key);
		DataArray da = new DataArray();
		item.getDataArray(da);
		readCache(da);
		item.DataItemClear();
	}
	public DataArray writeCache() throws FastCacheException {
		int sa_idx = 0;
		DataArray da = new DataArray(DataItem.DATAITEMDATAITEM, 14);
		item.putDate(_changeApplyTime);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_book);
		da.setDataItem(sa_idx++, item);
		item.putInt(_divId);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_institution);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_legalEntity);
		da.setDataItem(sa_idx++, item);
		item.putInt(_swapNumber);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_ticker);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_preChngDivCcy);
		da.setDataItem(sa_idx++, item);
		item.putFloat(_preChngNetDivRate);
		da.setDataItem(sa_idx++, item);
		item.putFloat(_preChngGrsDivRate);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_currDivCcy);
		da.setDataItem(sa_idx++, item);
		item.putFloat(_currNetDivRate);
		da.setDataItem(sa_idx++, item);
		item.putFloat(_currGrsDivRate);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_userName);
		da.setDataItem(sa_idx++, item);
		item.DataItemClear();
		return da;
	}
	public void readCache(DataArray in) throws FastCacheException {
		int sa_idx = 0;
		in.getDataItem(sa_idx++, item);
		_changeApplyTime = item.getDate();
		in.getDataItem(sa_idx++, item);
		_book = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_divId = item.getInt();
		in.getDataItem(sa_idx++, item);
		_institution = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_legalEntity = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_swapNumber = item.getInt();
		in.getDataItem(sa_idx++, item);
		_ticker = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_preChngDivCcy = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_preChngNetDivRate = item.getFloat();
		in.getDataItem(sa_idx++, item);
		_preChngGrsDivRate = item.getFloat();
		in.getDataItem(sa_idx++, item);
		_currDivCcy = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_currNetDivRate = item.getFloat();
		in.getDataItem(sa_idx++, item);
		_currGrsDivRate = item.getFloat();
		in.getDataItem(sa_idx++, item);
		_userName = item.getCharArray();
	}
	public void writeObject(byte [] data) throws FastCacheException {
		item.writeObject(data);
		DataArray in = new DataArray();
		item.getDataArray(in);
		readCache(in);
	}
	public byte [] readObject() throws FastCacheException, IOException {
		DataArray requestDA = writeCache();
		item.putDataArray(requestDA);
		return item.readObject();
	}
	private Date _changeApplyTime =  new Date();
	private char[] _book;
	private int _divId;
	private char[] _institution;
	private char[] _legalEntity;
	private int _swapNumber;
	private char[] _ticker;
	private char[] _preChngDivCcy;
	private float _preChngNetDivRate;
	private float _preChngGrsDivRate;
	private char[] _currDivCcy;
	private float _currNetDivRate;
	private float _currGrsDivRate;
	private char[] _userName;
	private DataItem item = new DataItem();
}

