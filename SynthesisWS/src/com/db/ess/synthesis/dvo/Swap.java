// Title:        Swap
// Author:       Generate code
// Company:      
// Description:  This class was generated by the XML-Broker Developer Console
// Schema name:  /home/anthony/workspace/SynthesisWS/schema/Synthesis.xsd
// Java SDK:     

package com.db.ess.synthesis.dvo;

import java.util.Date;
import java.util.Iterator;
import java.util.NoSuchElementException;
import java.io.IOException;

import org.adaptinet.sdk.adaptinetex.FastCacheException;
import org.adaptinet.sdk.fastcache.CacheServer;
import org.adaptinet.sdk.fastcache.DataArray;
import org.adaptinet.sdk.fastcache.DataItem;
import org.adaptinet.sdk.fastcache.FastCacheDVOBase;

public class Swap implements FastCacheDVOBase  {
	public long getswapBtBCount() { 
		return _swapBtBCount;
	}
	public Integer[] getswapBtBArray() { 
		return _swapBtB;
	}
	public void setswapBtBArray(Integer newValue[]) { 
		_swapBtB=newValue;
	}
	@SuppressWarnings("rawtypes")
	public Iterator getswapBtBIterator() { 
		return new Iterator() {
			int cursor=0;
			int last=-1;
			public boolean hasNext() {
				if(_swapBtB==null) return false;
				if(last<0) {
					last = _swapBtB.length;
					while(--last>-1&&_swapBtB[last]==null);
					last++;
				}
				return cursor!=last;
			}
			public Object next() {
				try {
					return _swapBtB[cursor++];
				} catch(IndexOutOfBoundsException e) {
					throw new NoSuchElementException();
				}
			}
			public void remove() {
				try {
					_swapBtB[cursor++]=null;
				} catch(IndexOutOfBoundsException e) {
					throw new NoSuchElementException();
				}
			}
		};
	}
	public int getswapBtB(int idx) { 
		return _swapBtB[idx].intValue();
	}
	public void setswapBtB(int newValue) { 
		if(_swapBtB!=null) {
			int __OPEN_A=-1;
			for(int __I_A=0;__I_A<_swapBtB.length;__I_A++) {
				if(_swapBtB[__I_A]==null) {
					__OPEN_A=__I_A;
					break;
				}
			}
			if(__OPEN_A<0) {
				__OPEN_A=_swapBtB.length;
				Integer array[] = new Integer[__OPEN_A+10];
				System.arraycopy(_swapBtB,0,array,0,_swapBtB.length);
				_swapBtB = array;
			}
			_swapBtB[__OPEN_A] = new Integer(newValue);
		}
		else {
			_swapBtB = new Integer[10];
			_swapBtB[0] = Integer.valueOf(newValue);
		}
	}
	public Date gettradeDate() { 
		return _tradeDate;
	}
	public void settradeDate(Date newValue) { 
		_tradeDate = newValue;
	}
	public Date geteffDate() { 
		return _effDate;
	}
	public void seteffDate(Date newValue) { 
		_effDate = newValue;
	}
	public Date gettermDate() { 
		return _termDate;
	}
	public void settermDate(Date newValue) { 
		_termDate = newValue;
	}
	public boolean getlinked() {
		return _linked;
	}
	public void setlinked(boolean newValue) {
		_linked = newValue;
	}
	public int getswapNumber() {
		return _swapNumber;
	}
	public void setswapNumber(int newValue) {
		_swapNumber = newValue;
	}
	public String getswapName() {
		if(_swapName!=null) {
			return new String(_swapName);
		}
		else {
			return null;
		}
	}
	public void setswapName(String newValue) {
		_swapName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String gettradePartyName() {
		if(_tradePartyName!=null) {
			return new String(_tradePartyName);
		}
		else {
			return null;
		}
	}
	public void settradePartyName(String newValue) {
		_tradePartyName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getcontact() {
		if(_contact!=null) {
			return new String(_contact);
		}
		else {
			return null;
		}
	}
	public void setcontact(String newValue) {
		_contact = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getswapType() {
		if(_swapType!=null) {
			return new String(_swapType);
		}
		else {
			return null;
		}
	}
	public void setswapType(String newValue) {
		_swapType = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getstrategy() {
		if(_strategy!=null) {
			return new String(_strategy);
		}
		else {
			return null;
		}
	}
	public void setstrategy(String newValue) {
		_strategy = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getstatus() {
		if(_status!=null) {
			return new String(_status);
		}
		else {
			return null;
		}
	}
	public void setstatus(String newValue) {
		_status = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getinternalLoan() {
		return _internalLoan;
	}
	public void setinternalLoan(int newValue) {
		_internalLoan = newValue;
	}
	public int getpayEqAsRealized() {
		return _payEqAsRealized;
	}
	public void setpayEqAsRealized(int newValue) {
		_payEqAsRealized = newValue;
	}
	public int getcalcAgent() {
		return _calcAgent;
	}
	public void setcalcAgent(int newValue) {
		_calcAgent = newValue;
	}
	public int getneedDoc() {
		return _needDoc;
	}
	public void setneedDoc(int newValue) {
		_needDoc = newValue;
	}
	public int getstructureNum() {
		return _structureNum;
	}
	public void setstructureNum(int newValue) {
		_structureNum = newValue;
	}
	public String getcollType() {
		if(_collType!=null) {
			return new String(_collType);
		}
		else {
			return null;
		}
	}
	public void setcollType(String newValue) {
		_collType = newValue!=null ? newValue.toCharArray() : null;
	}
	public double getcollLong() {
		return _collLong;
	}
	public void setcollLong(double newValue) {
		_collLong = newValue;
	}
	public double getcollShort() {
		return _collShort;
	}
	public void setcollShort(double newValue) {
		_collShort = newValue;
	}
	public double getintThreshold() {
		return _intThreshold;
	}
	public void setintThreshold(double newValue) {
		_intThreshold = newValue;
	}
	public double getextThreshold() {
		return _extThreshold;
	}
	public void setextThreshold(double newValue) {
		_extThreshold = newValue;
	}
	public String getcountry() {
		if(_country!=null) {
			return new String(_country);
		}
		else {
			return null;
		}
	}
	public void setcountry(String newValue) {
		_country = newValue!=null ? newValue.toCharArray() : null;
	}
	public double getcommAmt() {
		return _commAmt;
	}
	public void setcommAmt(double newValue) {
		_commAmt = newValue;
	}
	public String getcommType() {
		if(_commType!=null) {
			return new String(_commType);
		}
		else {
			return null;
		}
	}
	public void setcommType(String newValue) {
		_commType = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getcommPayType() {
		if(_commPayType!=null) {
			return new String(_commPayType);
		}
		else {
			return null;
		}
	}
	public void setcommPayType(String newValue) {
		_commPayType = newValue!=null ? newValue.toCharArray() : null;
	}
	public String geteqReturnType() {
		if(_eqReturnType!=null) {
			return new String(_eqReturnType);
		}
		else {
			return null;
		}
	}
	public void seteqReturnType(String newValue) {
		_eqReturnType = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getpayCcy() {
		if(_payCcy!=null) {
			return new String(_payCcy);
		}
		else {
			return null;
		}
	}
	public void setpayCcy(String newValue) {
		_payCcy = newValue!=null ? newValue.toCharArray() : null;
	}
	public String gettradeCcy() {
		if(_tradeCcy!=null) {
			return new String(_tradeCcy);
		}
		else {
			return null;
		}
	}
	public void settradeCcy(String newValue) {
		_tradeCcy = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getdivPayType() {
		if(_divPayType!=null) {
			return new String(_divPayType);
		}
		else {
			return null;
		}
	}
	public void setdivPayType(String newValue) {
		_divPayType = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getfxDivs() {
		return _fxDivs;
	}
	public void setfxDivs(int newValue) {
		_fxDivs = newValue;
	}
	public int getfxDivDate() {
		return _fxDivDate;
	}
	public void setfxDivDate(int newValue) {
		_fxDivDate = newValue;
	}
	public int getdivFxOffset() {
		return _divFxOffset;
	}
	public void setdivFxOffset(int newValue) {
		_divFxOffset = newValue;
	}
	public double getshortSpread() {
		return _shortSpread;
	}
	public void setshortSpread(double newValue) {
		_shortSpread = newValue;
	}
	public double getlongSpread() {
		return _longSpread;
	}
	public void setlongSpread(double newValue) {
		_longSpread = newValue;
	}
	public double getshortNetDivPct() {
		return _shortNetDivPct;
	}
	public void setshortNetDivPct(double newValue) {
		_shortNetDivPct = newValue;
	}
	public double getlongNetDivPct() {
		return _longNetDivPct;
	}
	public void setlongNetDivPct(double newValue) {
		_longNetDivPct = newValue;
	}
	public String getintBasis() {
		if(_intBasis!=null) {
			return new String(_intBasis);
		}
		else {
			return null;
		}
	}
	public void setintBasis(String newValue) {
		_intBasis = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getintPeriod() {
		if(_intPeriod!=null) {
			return new String(_intPeriod);
		}
		else {
			return null;
		}
	}
	public void setintPeriod(String newValue) {
		_intPeriod = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getintTicker() {
		if(_intTicker!=null) {
			return new String(_intTicker);
		}
		else {
			return null;
		}
	}
	public void setintTicker(String newValue) {
		_intTicker = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getfixedRate() {
		return _fixedRate;
	}
	public void setfixedRate(int newValue) {
		_fixedRate = newValue;
	}
	public String geteqPayFreq() {
		if(_eqPayFreq!=null) {
			return new String(_eqPayFreq);
		}
		else {
			return null;
		}
	}
	public void seteqPayFreq(String newValue) {
		_eqPayFreq = newValue!=null ? newValue.toCharArray() : null;
	}
	public String geteqPayCal() {
		if(_eqPayCal!=null) {
			return new String(_eqPayCal);
		}
		else {
			return null;
		}
	}
	public void seteqPayCal(String newValue) {
		_eqPayCal = newValue!=null ? newValue.toCharArray() : null;
	}
	public String geteqPayRuleType() {
		if(_eqPayRuleType!=null) {
			return new String(_eqPayRuleType);
		}
		else {
			return null;
		}
	}
	public void seteqPayRuleType(String newValue) {
		_eqPayRuleType = newValue!=null ? newValue.toCharArray() : null;
	}
	public String geteqPayBump() {
		if(_eqPayBump!=null) {
			return new String(_eqPayBump);
		}
		else {
			return null;
		}
	}
	public void seteqPayBump(String newValue) {
		_eqPayBump = newValue!=null ? newValue.toCharArray() : null;
	}
	public int geteqPayOffset() {
		return _eqPayOffset;
	}
	public void seteqPayOffset(int newValue) {
		_eqPayOffset = newValue;
	}
	public String geteqPayPriority() {
		if(_eqPayPriority!=null) {
			return new String(_eqPayPriority);
		}
		else {
			return null;
		}
	}
	public void seteqPayPriority(String newValue) {
		_eqPayPriority = newValue!=null ? newValue.toCharArray() : null;
	}
	public int geteqPaySeq() {
		return _eqPaySeq;
	}
	public void seteqPaySeq(int newValue) {
		_eqPaySeq = newValue;
	}
	public String geteqPaySeqType() {
		if(_eqPaySeqType!=null) {
			return new String(_eqPaySeqType);
		}
		else {
			return null;
		}
	}
	public void seteqPaySeqType(String newValue) {
		_eqPaySeqType = newValue!=null ? newValue.toCharArray() : null;
	}
	public String geteqResetSource() {
		if(_eqResetSource!=null) {
			return new String(_eqResetSource);
		}
		else {
			return null;
		}
	}
	public void seteqResetSource(String newValue) {
		_eqResetSource = newValue!=null ? newValue.toCharArray() : null;
	}
	public String geteqResetCal() {
		if(_eqResetCal!=null) {
			return new String(_eqResetCal);
		}
		else {
			return null;
		}
	}
	public void seteqResetCal(String newValue) {
		_eqResetCal = newValue!=null ? newValue.toCharArray() : null;
	}
	public String geteqResetRuleType() {
		if(_eqResetRuleType!=null) {
			return new String(_eqResetRuleType);
		}
		else {
			return null;
		}
	}
	public void seteqResetRuleType(String newValue) {
		_eqResetRuleType = newValue!=null ? newValue.toCharArray() : null;
	}
	public String geteqResetBump() {
		if(_eqResetBump!=null) {
			return new String(_eqResetBump);
		}
		else {
			return null;
		}
	}
	public void seteqResetBump(String newValue) {
		_eqResetBump = newValue!=null ? newValue.toCharArray() : null;
	}
	public int geteqResetOffset() {
		return _eqResetOffset;
	}
	public void seteqResetOffset(int newValue) {
		_eqResetOffset = newValue;
	}
	public String getfxResetCal() {
		if(_fxResetCal!=null) {
			return new String(_fxResetCal);
		}
		else {
			return null;
		}
	}
	public void setfxResetCal(String newValue) {
		_fxResetCal = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getfxResetSource() {
		if(_fxResetSource!=null) {
			return new String(_fxResetSource);
		}
		else {
			return null;
		}
	}
	public void setfxResetSource(String newValue) {
		_fxResetSource = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getfxResetOffset() {
		return _fxResetOffset;
	}
	public void setfxResetOffset(int newValue) {
		_fxResetOffset = newValue;
	}
	public String getintPayFreq() {
		if(_intPayFreq!=null) {
			return new String(_intPayFreq);
		}
		else {
			return null;
		}
	}
	public void setintPayFreq(String newValue) {
		_intPayFreq = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getintPayCal() {
		if(_intPayCal!=null) {
			return new String(_intPayCal);
		}
		else {
			return null;
		}
	}
	public void setintPayCal(String newValue) {
		_intPayCal = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getintPayRuleType() {
		if(_intPayRuleType!=null) {
			return new String(_intPayRuleType);
		}
		else {
			return null;
		}
	}
	public void setintPayRuleType(String newValue) {
		_intPayRuleType = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getintPayBump() {
		if(_intPayBump!=null) {
			return new String(_intPayBump);
		}
		else {
			return null;
		}
	}
	public void setintPayBump(String newValue) {
		_intPayBump = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getintPayOffset() {
		return _intPayOffset;
	}
	public void setintPayOffset(int newValue) {
		_intPayOffset = newValue;
	}
	public String getintPayPriority() {
		if(_intPayPriority!=null) {
			return new String(_intPayPriority);
		}
		else {
			return null;
		}
	}
	public void setintPayPriority(String newValue) {
		_intPayPriority = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getintPaySeq() {
		return _intPaySeq;
	}
	public void setintPaySeq(int newValue) {
		_intPaySeq = newValue;
	}
	public String getintPaySeqType() {
		if(_intPaySeqType!=null) {
			return new String(_intPaySeqType);
		}
		else {
			return null;
		}
	}
	public void setintPaySeqType(String newValue) {
		_intPaySeqType = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getintResetSource() {
		if(_intResetSource!=null) {
			return new String(_intResetSource);
		}
		else {
			return null;
		}
	}
	public void setintResetSource(String newValue) {
		_intResetSource = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getintResetFreq() {
		if(_intResetFreq!=null) {
			return new String(_intResetFreq);
		}
		else {
			return null;
		}
	}
	public void setintResetFreq(String newValue) {
		_intResetFreq = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getintResetCal() {
		if(_intResetCal!=null) {
			return new String(_intResetCal);
		}
		else {
			return null;
		}
	}
	public void setintResetCal(String newValue) {
		_intResetCal = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getintResetRuleType() {
		if(_intResetRuleType!=null) {
			return new String(_intResetRuleType);
		}
		else {
			return null;
		}
	}
	public void setintResetRuleType(String newValue) {
		_intResetRuleType = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getintResetBump() {
		if(_intResetBump!=null) {
			return new String(_intResetBump);
		}
		else {
			return null;
		}
	}
	public void setintResetBump(String newValue) {
		_intResetBump = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getintResetOffset() {
		return _intResetOffset;
	}
	public void setintResetOffset(int newValue) {
		_intResetOffset = newValue;
	}
	public double getintFirstFixing() {
		return _intFirstFixing;
	}
	public void setintFirstFixing(double newValue) {
		_intFirstFixing = newValue;
	}
	public String getadpAcctNum() {
		if(_adpAcctNum!=null) {
			return new String(_adpAcctNum);
		}
		else {
			return null;
		}
	}
	public void setadpAcctNum(String newValue) {
		_adpAcctNum = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getswapId() {
		return _swapId;
	}
	public void setswapId(int newValue) {
		_swapId = newValue;
	}
	public int getcustomerId() {
		return _customerId;
	}
	public void setcustomerId(int newValue) {
		_customerId = newValue;
	}
	public int getbookId() {
		return _bookId;
	}
	public void setbookId(int newValue) {
		_bookId = newValue;
	}
	public int getautomature() {
		return _automature;
	}
	public void setautomature(int newValue) {
		_automature = newValue;
	}
	public String getautomatureDate() {
		if(_automatureDate!=null) {
			return new String(_automatureDate);
		}
		else {
			return null;
		}
	}
	public void setautomatureDate(String newValue) {
		_automatureDate = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getbtbEntityId1() {
		return _btbEntityId1;
	}
	public void setbtbEntityId1(int newValue) {
		_btbEntityId1 = newValue;
	}
	public String getbtbBookName1() {
		if(_btbBookName1!=null) {
			return new String(_btbBookName1);
		}
		else {
			return null;
		}
	}
	public void setbtbBookName1(String newValue) {
		_btbBookName1 = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getbtbEntityId2() {
		return _btbEntityId2;
	}
	public void setbtbEntityId2(int newValue) {
		_btbEntityId2 = newValue;
	}
	public String getbtbBookName2() {
		if(_btbBookName2!=null) {
			return new String(_btbBookName2);
		}
		else {
			return null;
		}
	}
	public void setbtbBookName2(String newValue) {
		_btbBookName2 = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getbtbBUName1() {
		if(_btbBUName1!=null) {
			return new String(_btbBUName1);
		}
		else {
			return null;
		}
	}
	public void setbtbBUName1(String newValue) {
		_btbBUName1 = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getbtbAccountName1() {
		if(_btbAccountName1!=null) {
			return new String(_btbAccountName1);
		}
		else {
			return null;
		}
	}
	public void setbtbAccountName1(String newValue) {
		_btbAccountName1 = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getbtbBUName2() {
		if(_btbBUName2!=null) {
			return new String(_btbBUName2);
		}
		else {
			return null;
		}
	}
	public void setbtbBUName2(String newValue) {
		_btbBUName2 = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getbtbAccountName2() {
		if(_btbAccountName2!=null) {
			return new String(_btbAccountName2);
		}
		else {
			return null;
		}
	}
	public void setbtbAccountName2(String newValue) {
		_btbAccountName2 = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getcustomerName() {
		if(_customerName!=null) {
			return new String(_customerName);
		}
		else {
			return null;
		}
	}
	public void setcustomerName(String newValue) {
		_customerName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getinstitutionName() {
		if(_institutionName!=null) {
			return new String(_institutionName);
		}
		else {
			return null;
		}
	}
	public void setinstitutionName(String newValue) {
		_institutionName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getbookName() {
		if(_bookName!=null) {
			return new String(_bookName);
		}
		else {
			return null;
		}
	}
	public void setbookName(String newValue) {
		_bookName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getaccountName() {
		if(_accountName!=null) {
			return new String(_accountName);
		}
		else {
			return null;
		}
	}
	public void setaccountName(String newValue) {
		_accountName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getdeskName() {
		if(_deskName!=null) {
			return new String(_deskName);
		}
		else {
			return null;
		}
	}
	public void setdeskName(String newValue) {
		_deskName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getbusinessNameUnit() {
		if(_businessNameUnit!=null) {
			return new String(_businessNameUnit);
		}
		else {
			return null;
		}
	}
	public void setbusinessNameUnit(String newValue) {
		_businessNameUnit = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getessLocation() {
		return _essLocation;
	}
	public void setessLocation(int newValue) {
		_essLocation = newValue;
	}
	public int gettotalReturnSwap() {
		return _totalReturnSwap;
	}
	public void settotalReturnSwap(int newValue) {
		_totalReturnSwap = newValue;
	}
	public int gettermFunding() {
		return _termFunding;
	}
	public void settermFunding(int newValue) {
		_termFunding = newValue;
	}
	public String getmaturityTag() {
		if(_maturityTag!=null) {
			return new String(_maturityTag);
		}
		else {
			return null;
		}
	}
	public void setmaturityTag(String newValue) {
		_maturityTag = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getindexDivEntitle() {
		if(_indexDivEntitle!=null) {
			return new String(_indexDivEntitle);
		}
		else {
			return null;
		}
	}
	public void setindexDivEntitle(String newValue) {
		_indexDivEntitle = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getdivRounding() {
		return _divRounding;
	}
	public void setdivRounding(int newValue) {
		_divRounding = newValue;
	}
	public double getborrowSpreadShort() {
		return _borrowSpreadShort;
	}
	public void setborrowSpreadShort(double newValue) {
		_borrowSpreadShort = newValue;
	}
	public double getborrowSpreadLong() {
		return _borrowSpreadLong;
	}
	public void setborrowSpreadLong(double newValue) {
		_borrowSpreadLong = newValue;
	}
	public Date getproptermDate() {
		return _proptermDate;
	}
	public void setproptermDate(Date newValue) {
		_proptermDate = newValue;
	}
	public int getmwenabled() {
		return _mwenabled;
	}
	public void setmwenabled(int newValue) {
		_mwenabled = newValue;
	}
	public String getprofitCentreName() {
		if(_profitCentreName!=null) {
			return new String(_profitCentreName);
		}
		else {
			return null;
		}
	}
	public void setprofitCentreName(String newValue) {
		_profitCentreName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getbtbEntityName1() {
		if(_btbEntityName1!=null) {
			return new String(_btbEntityName1);
		}
		else {
			return null;
		}
	}
	public void setbtbEntityName1(String newValue) {
		_btbEntityName1 = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getbtbEntityName2() {
		if(_btbEntityName2!=null) {
			return new String(_btbEntityName2);
		}
		else {
			return null;
		}
	}
	public void setbtbEntityName2(String newValue) {
		_btbEntityName2 = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getcopyEquityDates() {
		return _copyEquityDates;
	}
	public void setcopyEquityDates(int newValue) {
		_copyEquityDates = newValue;
	}
	public boolean getisPrimary() {
		return _isPrimary;
	}
	public void setisPrimary(boolean newValue) {
		_isPrimary = newValue;
	}
	public void putToCache(String key, CacheServer server) throws FastCacheException {
		DataArray da = writeCache();
		item.putDataArray(da);
		server.putValue(key, item);
		item.DataItemClear();
	}
	public void getFromCache(String key, CacheServer server) throws FastCacheException {
		DataItem item = server.getValue(key);
		DataArray da = new DataArray();
		item.getDataArray(da);
		readCache(da);
		item.DataItemClear();
	}
	public DataArray writeCache() throws FastCacheException {
		int sa_idx = 0;
		DataArray da = new DataArray(DataItem.DATAITEMDATAITEM, 107);
		if(_swapBtB!=null) {
			DataArray daChild = new DataArray(DataItem.DATAITEMARRAY, _swapBtBCount);
			for(int __I_A=0;__I_A<_swapBtBCount;__I_A++) {
				daChild.setInt(__I_A, _swapBtB[__I_A]);
			}
			item.putDataArray(daChild);
		}
		else {
			item.putEmpty();
		}
		da.setDataItem(sa_idx++, item);
		item.putDate(_tradeDate);
		da.setDataItem(sa_idx++, item);
		item.putDate(_effDate);
		da.setDataItem(sa_idx++, item);
		item.putDate(_termDate);
		da.setDataItem(sa_idx++, item);
		item.putBoolean(_linked);
		da.setDataItem(sa_idx++, item);
		item.putInt(_swapNumber);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_swapName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_tradePartyName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_contact);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_swapType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_strategy);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_status);
		da.setDataItem(sa_idx++, item);
		item.putInt(_internalLoan);
		da.setDataItem(sa_idx++, item);
		item.putInt(_payEqAsRealized);
		da.setDataItem(sa_idx++, item);
		item.putInt(_calcAgent);
		da.setDataItem(sa_idx++, item);
		item.putInt(_needDoc);
		da.setDataItem(sa_idx++, item);
		item.putInt(_structureNum);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_collType);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_collLong);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_collShort);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_intThreshold);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_extThreshold);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_country);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_commAmt);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_commType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_commPayType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_eqReturnType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_payCcy);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_tradeCcy);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_divPayType);
		da.setDataItem(sa_idx++, item);
		item.putInt(_fxDivs);
		da.setDataItem(sa_idx++, item);
		item.putInt(_fxDivDate);
		da.setDataItem(sa_idx++, item);
		item.putInt(_divFxOffset);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_shortSpread);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_longSpread);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_shortNetDivPct);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_longNetDivPct);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_intBasis);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_intPeriod);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_intTicker);
		da.setDataItem(sa_idx++, item);
		item.putInt(_fixedRate);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_eqPayFreq);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_eqPayCal);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_eqPayRuleType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_eqPayBump);
		da.setDataItem(sa_idx++, item);
		item.putInt(_eqPayOffset);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_eqPayPriority);
		da.setDataItem(sa_idx++, item);
		item.putInt(_eqPaySeq);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_eqPaySeqType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_eqResetSource);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_eqResetCal);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_eqResetRuleType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_eqResetBump);
		da.setDataItem(sa_idx++, item);
		item.putInt(_eqResetOffset);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_fxResetCal);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_fxResetSource);
		da.setDataItem(sa_idx++, item);
		item.putInt(_fxResetOffset);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_intPayFreq);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_intPayCal);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_intPayRuleType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_intPayBump);
		da.setDataItem(sa_idx++, item);
		item.putInt(_intPayOffset);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_intPayPriority);
		da.setDataItem(sa_idx++, item);
		item.putInt(_intPaySeq);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_intPaySeqType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_intResetSource);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_intResetFreq);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_intResetCal);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_intResetRuleType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_intResetBump);
		da.setDataItem(sa_idx++, item);
		item.putInt(_intResetOffset);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_intFirstFixing);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_adpAcctNum);
		da.setDataItem(sa_idx++, item);
		item.putInt(_swapId);
		da.setDataItem(sa_idx++, item);
		item.putInt(_customerId);
		da.setDataItem(sa_idx++, item);
		item.putInt(_bookId);
		da.setDataItem(sa_idx++, item);
		item.putInt(_automature);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_automatureDate);
		da.setDataItem(sa_idx++, item);
		item.putInt(_btbEntityId1);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_btbBookName1);
		da.setDataItem(sa_idx++, item);
		item.putInt(_btbEntityId2);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_btbBookName2);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_btbBUName1);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_btbAccountName1);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_btbBUName2);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_btbAccountName2);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_customerName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_institutionName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_bookName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_accountName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_deskName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_businessNameUnit);
		da.setDataItem(sa_idx++, item);
		item.putInt(_essLocation);
		da.setDataItem(sa_idx++, item);
		item.putInt(_totalReturnSwap);
		da.setDataItem(sa_idx++, item);
		item.putInt(_termFunding);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_maturityTag);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_indexDivEntitle);
		da.setDataItem(sa_idx++, item);
		item.putInt(_divRounding);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_borrowSpreadShort);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_borrowSpreadLong);
		da.setDataItem(sa_idx++, item);
		item.putDate(_proptermDate);
		da.setDataItem(sa_idx++, item);
		item.putInt(_mwenabled);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_profitCentreName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_btbEntityName1);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_btbEntityName2);
		da.setDataItem(sa_idx++, item);
		item.putInt(_copyEquityDates);
		da.setDataItem(sa_idx++, item);
		item.putBoolean(_isPrimary);
		da.setDataItem(sa_idx++, item);
		item.DataItemClear();
		return da;
	}
	public void readCache(DataArray in) throws FastCacheException {
		int sa_idx = 0;
		DataArray daItem = new DataArray();
		in.getDataItem(sa_idx++, item);
		item.getDataArray(daItem);
		_swapBtBCount = daItem.getElements();
		if(_swapBtBCount>0) {
			_swapBtB = new Integer [(int)_swapBtBCount];
			for(int __I_A=0;__I_A<_swapBtBCount;__I_A++) {
				_swapBtB[__I_A] = new Integer(daItem.getInt(__I_A));
			}
		}
		in.getDataItem(sa_idx++, item);
		_tradeDate = item.getDate();
		in.getDataItem(sa_idx++, item);
		_effDate = item.getDate();
		in.getDataItem(sa_idx++, item);
		_termDate = item.getDate();
		in.getDataItem(sa_idx++, item);
		_linked = item.getBoolean();
		in.getDataItem(sa_idx++, item);
		_swapNumber = item.getInt();
		in.getDataItem(sa_idx++, item);
		_swapName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_tradePartyName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_contact = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_swapType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_strategy = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_status = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_internalLoan = item.getInt();
		in.getDataItem(sa_idx++, item);
		_payEqAsRealized = item.getInt();
		in.getDataItem(sa_idx++, item);
		_calcAgent = item.getInt();
		in.getDataItem(sa_idx++, item);
		_needDoc = item.getInt();
		in.getDataItem(sa_idx++, item);
		_structureNum = item.getInt();
		in.getDataItem(sa_idx++, item);
		_collType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_collLong = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_collShort = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_intThreshold = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_extThreshold = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_country = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_commAmt = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_commType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_commPayType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_eqReturnType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_payCcy = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_tradeCcy = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_divPayType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_fxDivs = item.getInt();
		in.getDataItem(sa_idx++, item);
		_fxDivDate = item.getInt();
		in.getDataItem(sa_idx++, item);
		_divFxOffset = item.getInt();
		in.getDataItem(sa_idx++, item);
		_shortSpread = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_longSpread = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_shortNetDivPct = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_longNetDivPct = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_intBasis = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_intPeriod = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_intTicker = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_fixedRate = item.getInt();
		in.getDataItem(sa_idx++, item);
		_eqPayFreq = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_eqPayCal = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_eqPayRuleType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_eqPayBump = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_eqPayOffset = item.getInt();
		in.getDataItem(sa_idx++, item);
		_eqPayPriority = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_eqPaySeq = item.getInt();
		in.getDataItem(sa_idx++, item);
		_eqPaySeqType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_eqResetSource = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_eqResetCal = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_eqResetRuleType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_eqResetBump = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_eqResetOffset = item.getInt();
		in.getDataItem(sa_idx++, item);
		_fxResetCal = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_fxResetSource = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_fxResetOffset = item.getInt();
		in.getDataItem(sa_idx++, item);
		_intPayFreq = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_intPayCal = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_intPayRuleType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_intPayBump = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_intPayOffset = item.getInt();
		in.getDataItem(sa_idx++, item);
		_intPayPriority = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_intPaySeq = item.getInt();
		in.getDataItem(sa_idx++, item);
		_intPaySeqType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_intResetSource = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_intResetFreq = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_intResetCal = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_intResetRuleType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_intResetBump = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_intResetOffset = item.getInt();
		in.getDataItem(sa_idx++, item);
		_intFirstFixing = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_adpAcctNum = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_swapId = item.getInt();
		in.getDataItem(sa_idx++, item);
		_customerId = item.getInt();
		in.getDataItem(sa_idx++, item);
		_bookId = item.getInt();
		in.getDataItem(sa_idx++, item);
		_automature = item.getInt();
		in.getDataItem(sa_idx++, item);
		_automatureDate = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_btbEntityId1 = item.getInt();
		in.getDataItem(sa_idx++, item);
		_btbBookName1 = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_btbEntityId2 = item.getInt();
		in.getDataItem(sa_idx++, item);
		_btbBookName2 = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_btbBUName1 = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_btbAccountName1 = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_btbBUName2 = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_btbAccountName2 = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_customerName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_institutionName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_bookName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_accountName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_deskName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_businessNameUnit = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_essLocation = item.getInt();
		in.getDataItem(sa_idx++, item);
		_totalReturnSwap = item.getInt();
		in.getDataItem(sa_idx++, item);
		_termFunding = item.getInt();
		in.getDataItem(sa_idx++, item);
		_maturityTag = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_indexDivEntitle = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_divRounding = item.getInt();
		in.getDataItem(sa_idx++, item);
		_borrowSpreadShort = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_borrowSpreadLong = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_proptermDate = item.getDate();
		in.getDataItem(sa_idx++, item);
		_mwenabled = item.getInt();
		in.getDataItem(sa_idx++, item);
		_profitCentreName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_btbEntityName1 = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_btbEntityName2 = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_copyEquityDates = item.getInt();
		in.getDataItem(sa_idx++, item);
		_isPrimary = item.getBoolean();
	}
	public void writeObject(byte [] data) throws FastCacheException {
		item.writeObject(data);
		DataArray in = new DataArray();
		item.getDataArray(in);
		readCache(in);
	}
	public byte [] readObject() throws FastCacheException, IOException {
		DataArray requestDA = writeCache();
		item.putDataArray(requestDA);
		return item.readObject();
	}
	private Integer _swapBtB[] = null;
	private long _swapBtBCount = 0;
	private Date _tradeDate =  new Date();
	private Date _effDate =  new Date();
	private Date _termDate =  new Date();
	private boolean _linked;
	private int _swapNumber;
	private char[] _swapName;
	private char[] _tradePartyName;
	private char[] _contact;
	private char[] _swapType;
	private char[] _strategy;
	private char[] _status;
	private int _internalLoan;
	private int _payEqAsRealized;
	private int _calcAgent;
	private int _needDoc;
	private int _structureNum;
	private char[] _collType;
	private double _collLong;
	private double _collShort;
	private double _intThreshold;
	private double _extThreshold;
	private char[] _country;
	private double _commAmt;
	private char[] _commType;
	private char[] _commPayType;
	private char[] _eqReturnType;
	private char[] _payCcy;
	private char[] _tradeCcy;
	private char[] _divPayType;
	private int _fxDivs;
	private int _fxDivDate;
	private int _divFxOffset;
	private double _shortSpread;
	private double _longSpread;
	private double _shortNetDivPct;
	private double _longNetDivPct;
	private char[] _intBasis;
	private char[] _intPeriod;
	private char[] _intTicker;
	private int _fixedRate;
	private char[] _eqPayFreq;
	private char[] _eqPayCal;
	private char[] _eqPayRuleType;
	private char[] _eqPayBump;
	private int _eqPayOffset;
	private char[] _eqPayPriority;
	private int _eqPaySeq;
	private char[] _eqPaySeqType;
	private char[] _eqResetSource;
	private char[] _eqResetCal;
	private char[] _eqResetRuleType;
	private char[] _eqResetBump;
	private int _eqResetOffset;
	private char[] _fxResetCal;
	private char[] _fxResetSource;
	private int _fxResetOffset;
	private char[] _intPayFreq;
	private char[] _intPayCal;
	private char[] _intPayRuleType;
	private char[] _intPayBump;
	private int _intPayOffset;
	private char[] _intPayPriority;
	private int _intPaySeq;
	private char[] _intPaySeqType;
	private char[] _intResetSource;
	private char[] _intResetFreq;
	private char[] _intResetCal;
	private char[] _intResetRuleType;
	private char[] _intResetBump;
	private int _intResetOffset;
	private double _intFirstFixing;
	private char[] _adpAcctNum;
	private int _swapId;
	private int _customerId;
	private int _bookId;
	private int _automature;
	private char[] _automatureDate;
	private int _btbEntityId1;
	private char[] _btbBookName1;
	private int _btbEntityId2;
	private char[] _btbBookName2;
	private char[] _btbBUName1;
	private char[] _btbAccountName1;
	private char[] _btbBUName2;
	private char[] _btbAccountName2;
	private char[] _customerName;
	private char[] _institutionName;
	private char[] _bookName;
	private char[] _accountName;
	private char[] _deskName;
	private char[] _businessNameUnit;
	private int _essLocation;
	private int _totalReturnSwap;
	private int _termFunding;
	private char[] _maturityTag;
	private char[] _indexDivEntitle;
	private int _divRounding;
	private double _borrowSpreadShort;
	private double _borrowSpreadLong;
	private Date _proptermDate;
	private int _mwenabled;
	private char[] _profitCentreName;
	private char[] _btbEntityName1;
	private char[] _btbEntityName2;
	private int _copyEquityDates;
	private boolean _isPrimary;
	private DataItem item = new DataItem();
}

