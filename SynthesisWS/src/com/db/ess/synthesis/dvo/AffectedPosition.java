// Title:        AffectedPosition
// Author:       Generate code
// Company:      
// Description:  This class was generated by the XML-Broker Developer Console
// Schema name:  /home/anthony/workspace/SynthesisWS/schema/Synthesis.xsd
// Java SDK:     

package com.db.ess.synthesis.dvo;

import java.io.IOException;

import org.adaptinet.sdk.adaptinetex.FastCacheException;
import org.adaptinet.sdk.fastcache.CacheServer;
import org.adaptinet.sdk.fastcache.DataArray;
import org.adaptinet.sdk.fastcache.DataItem;
import org.adaptinet.sdk.fastcache.FastCacheDVOBase;

public class AffectedPosition implements FastCacheDVOBase  {
	public int getswapNumber() {
		return _swapNumber;
	}
	public void setswapNumber(int newValue) {
		_swapNumber = newValue;
	}
	public String getbookName() {
		if(_bookName!=null) {
			return new String(_bookName);
		}
		else {
			return null;
		}
	}
	public void setbookName(String newValue) {
		_bookName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getinstitutionName() {
		if(_institutionName!=null) {
			return new String(_institutionName);
		}
		else {
			return null;
		}
	}
	public void setinstitutionName(String newValue) {
		_institutionName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getcustomerName() {
		if(_customerName!=null) {
			return new String(_customerName);
		}
		else {
			return null;
		}
	}
	public void setcustomerName(String newValue) {
		_customerName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getticker() {
		if(_ticker!=null) {
			return new String(_ticker);
		}
		else {
			return null;
		}
	}
	public void setticker(String newValue) {
		_ticker = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getinstrDescription() {
		if(_instrDescription!=null) {
			return new String(_instrDescription);
		}
		else {
			return null;
		}
	}
	public void setinstrDescription(String newValue) {
		_instrDescription = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getinstrCcy() {
		if(_instrCcy!=null) {
			return new String(_instrCcy);
		}
		else {
			return null;
		}
	}
	public void setinstrCcy(String newValue) {
		_instrCcy = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getpayCcy() {
		if(_payCcy!=null) {
			return new String(_payCcy);
		}
		else {
			return null;
		}
	}
	public void setpayCcy(String newValue) {
		_payCcy = newValue!=null ? newValue.toCharArray() : null;
	}
	public float getqty() {
		return _qty;
	}
	public void setqty(float newValue) {
		_qty = newValue;
	}
	public float getmarketPrice() {
		return _marketPrice;
	}
	public void setmarketPrice(float newValue) {
		_marketPrice = newValue;
	}
	public float getavgCostBase() {
		return _avgCostBase;
	}
	public void setavgCostBase(float newValue) {
		_avgCostBase = newValue;
	}
	public float getavgCostPay() {
		return _avgCostPay;
	}
	public void setavgCostPay(float newValue) {
		_avgCostPay = newValue;
	}
	public float getfxRate() {
		return _fxRate;
	}
	public void setfxRate(float newValue) {
		_fxRate = newValue;
	}
	public String getisin() {
		if(_isin!=null) {
			return new String(_isin);
		}
		else {
			return null;
		}
	}
	public void setisin(String newValue) {
		_isin = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getcusip() {
		if(_cusip!=null) {
			return new String(_cusip);
		}
		else {
			return null;
		}
	}
	public void setcusip(String newValue) {
		_cusip = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getcountryCode() {
		if(_countryCode!=null) {
			return new String(_countryCode);
		}
		else {
			return null;
		}
	}
	public void setcountryCode(String newValue) {
		_countryCode = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getstrategy() {
		if(_strategy!=null) {
			return new String(_strategy);
		}
		else {
			return null;
		}
	}
	public void setstrategy(String newValue) {
		_strategy = newValue!=null ? newValue.toCharArray() : null;
	}
	public void putToCache(String key, CacheServer server) throws FastCacheException {
		DataArray da = writeCache();
		item.putDataArray(da);
		server.putValue(key, item);
		item.DataItemClear();
	}
	public void getFromCache(String key, CacheServer server) throws FastCacheException {
		DataItem item = server.getValue(key);
		DataArray da = new DataArray();
		item.getDataArray(da);
		readCache(da);
		item.DataItemClear();
	}
	public DataArray writeCache() throws FastCacheException {
		int sa_idx = 0;
		DataArray da = new DataArray(DataItem.DATAITEMDATAITEM, 17);
		item.putInt(_swapNumber);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_bookName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_institutionName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_customerName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_ticker);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_instrDescription);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_instrCcy);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_payCcy);
		da.setDataItem(sa_idx++, item);
		item.putFloat(_qty);
		da.setDataItem(sa_idx++, item);
		item.putFloat(_marketPrice);
		da.setDataItem(sa_idx++, item);
		item.putFloat(_avgCostBase);
		da.setDataItem(sa_idx++, item);
		item.putFloat(_avgCostPay);
		da.setDataItem(sa_idx++, item);
		item.putFloat(_fxRate);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_isin);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_cusip);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_countryCode);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_strategy);
		da.setDataItem(sa_idx++, item);
		item.DataItemClear();
		return da;
	}
	public void readCache(DataArray in) throws FastCacheException {
		int sa_idx = 0;
		in.getDataItem(sa_idx++, item);
		_swapNumber = item.getInt();
		in.getDataItem(sa_idx++, item);
		_bookName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_institutionName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_customerName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_ticker = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_instrDescription = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_instrCcy = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_payCcy = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_qty = item.getFloat();
		in.getDataItem(sa_idx++, item);
		_marketPrice = item.getFloat();
		in.getDataItem(sa_idx++, item);
		_avgCostBase = item.getFloat();
		in.getDataItem(sa_idx++, item);
		_avgCostPay = item.getFloat();
		in.getDataItem(sa_idx++, item);
		_fxRate = item.getFloat();
		in.getDataItem(sa_idx++, item);
		_isin = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_cusip = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_countryCode = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_strategy = item.getCharArray();
	}
	public void writeObject(byte [] data) throws FastCacheException {
		item.writeObject(data);
		DataArray in = new DataArray();
		item.getDataArray(in);
		readCache(in);
	}
	public byte [] readObject() throws FastCacheException, IOException {
		DataArray requestDA = writeCache();
		item.putDataArray(requestDA);
		return item.readObject();
	}
	private int _swapNumber;
	private char[] _bookName;
	private char[] _institutionName;
	private char[] _customerName;
	private char[] _ticker;
	private char[] _instrDescription;
	private char[] _instrCcy;
	private char[] _payCcy;
	private float _qty;
	private float _marketPrice;
	private float _avgCostBase;
	private float _avgCostPay;
	private float _fxRate;
	private char[] _isin;
	private char[] _cusip;
	private char[] _countryCode;
	private char[] _strategy;
	private DataItem item = new DataItem();
}

