// Title:        GetPositionRequest
// Author:       Generate code
// Company:      
// Description:  This class was generated by the XML-Broker Developer Console
// Schema name:  /home/anthony/workspace/SynthesisWS/schema/Synthesis.xsd
// Java SDK:     

package com.db.ess.synthesis.dvo;

import java.util.Date;
import java.io.IOException;

import org.adaptinet.sdk.adaptinetex.FastCacheException;
import org.adaptinet.sdk.fastcache.CacheServer;
import org.adaptinet.sdk.fastcache.DataArray;
import org.adaptinet.sdk.fastcache.DataItem;
import org.adaptinet.sdk.fastcache.FastCacheDVOBase;

public class GetPositionRequest implements FastCacheDVOBase  {
	public Date getasOfDate() { 
		return _asOfDate;
	}
	public void setasOfDate(Date newValue) { 
		_asOfDate = newValue;
	}
	public int getlocation() {
		return _location;
	}
	public void setlocation(int newValue) {
		_location = newValue;
	}
	public int getuserId() {
		return _userId;
	}
	public void setuserId(int newValue) {
		_userId = newValue;
	}
	public int getopenOnly() {
		return _openOnly;
	}
	public void setopenOnly(int newValue) {
		_openOnly = newValue;
	}
	public String getpositionType() {
		if(_positionType!=null) {
			return new String(_positionType);
		}
		else {
			return null;
		}
	}
	public void setpositionType(String newValue) {
		_positionType = newValue!=null ? newValue.toCharArray() : null;
	}
	public Date gettermDate() {
		return _termDate;
	}
	public void settermDate(Date newValue) {
		_termDate = newValue;
	}
	public Date geteffectiveDate() {
		return _effectiveDate;
	}
	public void seteffectiveDate(Date newValue) {
		_effectiveDate = newValue;
	}
	public Date gettradeDate() {
		return _tradeDate;
	}
	public void settradeDate(Date newValue) {
		_tradeDate = newValue;
	}
	public String getswapNum() {
		if(_swapNum!=null) {
			return new String(_swapNum);
		}
		else {
			return null;
		}
	}
	public void setswapNum(String newValue) {
		_swapNum = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getswapName() {
		if(_swapName!=null) {
			return new String(_swapName);
		}
		else {
			return null;
		}
	}
	public void setswapName(String newValue) {
		_swapName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String gettradeParty() {
		if(_tradeParty!=null) {
			return new String(_tradeParty);
		}
		else {
			return null;
		}
	}
	public void settradeParty(String newValue) {
		_tradeParty = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getsecCodeType() {
		if(_secCodeType!=null) {
			return new String(_secCodeType);
		}
		else {
			return null;
		}
	}
	public void setsecCodeType(String newValue) {
		_secCodeType = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getsecCode() {
		if(_secCode!=null) {
			return new String(_secCode);
		}
		else {
			return null;
		}
	}
	public void setsecCode(String newValue) {
		_secCode = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getlegalEntity() {
		if(_legalEntity!=null) {
			return new String(_legalEntity);
		}
		else {
			return null;
		}
	}
	public void setlegalEntity(String newValue) {
		_legalEntity = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getinstitution() {
		if(_institution!=null) {
			return new String(_institution);
		}
		else {
			return null;
		}
	}
	public void setinstitution(String newValue) {
		_institution = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getbook() {
		if(_book!=null) {
			return new String(_book);
		}
		else {
			return null;
		}
	}
	public void setbook(String newValue) {
		_book = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getaccount() {
		if(_account!=null) {
			return new String(_account);
		}
		else {
			return null;
		}
	}
	public void setaccount(String newValue) {
		_account = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getdesk() {
		if(_desk!=null) {
			return new String(_desk);
		}
		else {
			return null;
		}
	}
	public void setdesk(String newValue) {
		_desk = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getbusinessUnit() {
		if(_businessUnit!=null) {
			return new String(_businessUnit);
		}
		else {
			return null;
		}
	}
	public void setbusinessUnit(String newValue) {
		_businessUnit = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getdescription() {
		if(_description!=null) {
			return new String(_description);
		}
		else {
			return null;
		}
	}
	public void setdescription(String newValue) {
		_description = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getsearchAll() {
		return _searchAll;
	}
	public void setsearchAll(int newValue) {
		_searchAll = newValue;
	}
	public String getinstrCcy() {
		if(_instrCcy!=null) {
			return new String(_instrCcy);
		}
		else {
			return null;
		}
	}
	public void setinstrCcy(String newValue) {
		_instrCcy = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getpayCcy() {
		if(_payCcy!=null) {
			return new String(_payCcy);
		}
		else {
			return null;
		}
	}
	public void setpayCcy(String newValue) {
		_payCcy = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getinstrDesc() {
		if(_instrDesc!=null) {
			return new String(_instrDesc);
		}
		else {
			return null;
		}
	}
	public void setinstrDesc(String newValue) {
		_instrDesc = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getdebug() {
		return _debug;
	}
	public void setdebug(int newValue) {
		_debug = newValue;
	}
	public String getexceptionID() {
		if(_exceptionID!=null) {
			return new String(_exceptionID);
		}
		else {
			return null;
		}
	}
	public void setexceptionID(String newValue) {
		_exceptionID = newValue!=null ? newValue.toCharArray() : null;
	}
	public void putToCache(String key, CacheServer server) throws FastCacheException {
		DataArray da = writeCache();
		item.putDataArray(da);
		server.putValue(key, item);
		item.DataItemClear();
	}
	public void getFromCache(String key, CacheServer server) throws FastCacheException {
		DataItem item = server.getValue(key);
		DataArray da = new DataArray();
		item.getDataArray(da);
		readCache(da);
		item.DataItemClear();
	}
	public DataArray writeCache() throws FastCacheException {
		int sa_idx = 0;
		DataArray da = new DataArray(DataItem.DATAITEMDATAITEM, 26);
		item.putDate(_asOfDate);
		da.setDataItem(sa_idx++, item);
		item.putInt(_location);
		da.setDataItem(sa_idx++, item);
		item.putInt(_userId);
		da.setDataItem(sa_idx++, item);
		item.putInt(_openOnly);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_positionType);
		da.setDataItem(sa_idx++, item);
		item.putDate(_termDate);
		da.setDataItem(sa_idx++, item);
		item.putDate(_effectiveDate);
		da.setDataItem(sa_idx++, item);
		item.putDate(_tradeDate);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_swapNum);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_swapName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_tradeParty);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_secCodeType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_secCode);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_legalEntity);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_institution);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_book);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_account);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_desk);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_businessUnit);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_description);
		da.setDataItem(sa_idx++, item);
		item.putInt(_searchAll);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_instrCcy);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_payCcy);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_instrDesc);
		da.setDataItem(sa_idx++, item);
		item.putInt(_debug);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_exceptionID);
		da.setDataItem(sa_idx++, item);
		item.DataItemClear();
		return da;
	}
	public void readCache(DataArray in) throws FastCacheException {
		int sa_idx = 0;
		in.getDataItem(sa_idx++, item);
		_asOfDate = item.getDate();
		in.getDataItem(sa_idx++, item);
		_location = item.getInt();
		in.getDataItem(sa_idx++, item);
		_userId = item.getInt();
		in.getDataItem(sa_idx++, item);
		_openOnly = item.getInt();
		in.getDataItem(sa_idx++, item);
		_positionType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_termDate = item.getDate();
		in.getDataItem(sa_idx++, item);
		_effectiveDate = item.getDate();
		in.getDataItem(sa_idx++, item);
		_tradeDate = item.getDate();
		in.getDataItem(sa_idx++, item);
		_swapNum = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_swapName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_tradeParty = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_secCodeType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_secCode = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_legalEntity = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_institution = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_book = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_account = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_desk = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_businessUnit = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_description = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_searchAll = item.getInt();
		in.getDataItem(sa_idx++, item);
		_instrCcy = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_payCcy = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_instrDesc = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_debug = item.getInt();
		in.getDataItem(sa_idx++, item);
		_exceptionID = item.getCharArray();
	}
	public void writeObject(byte [] data) throws FastCacheException {
		item.writeObject(data);
		DataArray in = new DataArray();
		item.getDataArray(in);
		readCache(in);
	}
	public byte [] readObject() throws FastCacheException, IOException {
		DataArray requestDA = writeCache();
		item.putDataArray(requestDA);
		return item.readObject();
	}
	private Date _asOfDate =  new Date();
	private int _location;
	private int _userId;
	private int _openOnly;
	private char[] _positionType;
	private Date _termDate;
	private Date _effectiveDate;
	private Date _tradeDate;
	private char[] _swapNum;
	private char[] _swapName;
	private char[] _tradeParty;
	private char[] _secCodeType;
	private char[] _secCode;
	private char[] _legalEntity;
	private char[] _institution;
	private char[] _book;
	private char[] _account;
	private char[] _desk;
	private char[] _businessUnit;
	private char[] _description;
	private int _searchAll;
	private char[] _instrCcy;
	private char[] _payCcy;
	private char[] _instrDesc;
	private int _debug;
	private char[] _exceptionID;
	private DataItem item = new DataItem();
}

