// Title:        DividendSpill
// Author:       Generate code
// Company:      
// Description:  This class was generated by the XML-Broker Developer Console
// Schema name:  /home/anthony/workspace/SynthesisWS/schema/Synthesis.xsd
// Java SDK:     

package com.db.ess.synthesis.dvo;

import java.util.Date;
import java.io.IOException;

import org.adaptinet.sdk.adaptinetex.FastCacheException;
import org.adaptinet.sdk.fastcache.CacheServer;
import org.adaptinet.sdk.fastcache.DataArray;
import org.adaptinet.sdk.fastcache.DataItem;
import org.adaptinet.sdk.fastcache.FastCacheDVOBase;

public class DividendSpill implements FastCacheDVOBase  {
	public Date getexDate() { 
		return _exDate;
	}
	public void setexDate(Date newValue) { 
		_exDate = newValue;
	}
	public Date getrecDate() { 
		return _recDate;
	}
	public void setrecDate(Date newValue) { 
		_recDate = newValue;
	}
	public Date getpayDate() { 
		return _payDate;
	}
	public void setpayDate(Date newValue) { 
		_payDate = newValue;
	}
	public Date getannDate() { 
		return _annDate;
	}
	public void setannDate(Date newValue) { 
		_annDate = newValue;
	}
	public String getticker() {
		if(_ticker!=null) {
			return new String(_ticker);
		}
		else {
			return null;
		}
	}
	public void setticker(String newValue) {
		_ticker = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getconstTicker() {
		if(_constTicker!=null) {
			return new String(_constTicker);
		}
		else {
			return null;
		}
	}
	public void setconstTicker(String newValue) {
		_constTicker = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getdividendSource() {
		if(_dividendSource!=null) {
			return new String(_dividendSource);
		}
		else {
			return null;
		}
	}
	public void setdividendSource(String newValue) {
		_dividendSource = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getdivCcy() {
		if(_divCcy!=null) {
			return new String(_divCcy);
		}
		else {
			return null;
		}
	}
	public void setdivCcy(String newValue) {
		_divCcy = newValue!=null ? newValue.toCharArray() : null;
	}
	public float getgross() {
		return _gross;
	}
	public void setgross(float newValue) {
		_gross = newValue;
	}
	public float getnet() {
		return _net;
	}
	public void setnet(float newValue) {
		_net = newValue;
	}
	public String getuserComment() {
		if(_userComment!=null) {
			return new String(_userComment);
		}
		else {
			return null;
		}
	}
	public void setuserComment(String newValue) {
		_userComment = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getcomment() {
		if(_comment!=null) {
			return new String(_comment);
		}
		else {
			return null;
		}
	}
	public void setcomment(String newValue) {
		_comment = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getessLocation() {
		if(_essLocation!=null) {
			return new String(_essLocation);
		}
		else {
			return null;
		}
	}
	public void setessLocation(String newValue) {
		_essLocation = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getfeedId() {
		if(_feedId!=null) {
			return new String(_feedId);
		}
		else {
			return null;
		}
	}
	public void setfeedId(String newValue) {
		_feedId = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getunderlyingId() {
		return _underlyingId;
	}
	public void setunderlyingId(int newValue) {
		_underlyingId = newValue;
	}
	public int getindexId() {
		return _indexId;
	}
	public void setindexId(int newValue) {
		_indexId = newValue;
	}
	public int getstatus() {
		return _status;
	}
	public void setstatus(int newValue) {
		_status = newValue;
	}
	public int getdivId() {
		return _divId;
	}
	public void setdivId(int newValue) {
		_divId = newValue;
	}
	public String getspillType() {
		if(_spillType!=null) {
			return new String(_spillType);
		}
		else {
			return null;
		}
	}
	public void setspillType(String newValue) {
		_spillType = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getuserIdCreate() {
		return _userIdCreate;
	}
	public void setuserIdCreate(int newValue) {
		_userIdCreate = newValue;
	}
	public String getuserNameCreate() {
		if(_userNameCreate!=null) {
			return new String(_userNameCreate);
		}
		else {
			return null;
		}
	}
	public void setuserNameCreate(String newValue) {
		_userNameCreate = newValue!=null ? newValue.toCharArray() : null;
	}
	public void putToCache(String key, CacheServer server) throws FastCacheException {
		DataArray da = writeCache();
		item.putDataArray(da);
		server.putValue(key, item);
		item.DataItemClear();
	}
	public void getFromCache(String key, CacheServer server) throws FastCacheException {
		DataItem item = server.getValue(key);
		DataArray da = new DataArray();
		item.getDataArray(da);
		readCache(da);
		item.DataItemClear();
	}
	public DataArray writeCache() throws FastCacheException {
		int sa_idx = 0;
		DataArray da = new DataArray(DataItem.DATAITEMDATAITEM, 21);
		item.putDate(_exDate);
		da.setDataItem(sa_idx++, item);
		item.putDate(_recDate);
		da.setDataItem(sa_idx++, item);
		item.putDate(_payDate);
		da.setDataItem(sa_idx++, item);
		item.putDate(_annDate);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_ticker);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_constTicker);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_dividendSource);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_divCcy);
		da.setDataItem(sa_idx++, item);
		item.putFloat(_gross);
		da.setDataItem(sa_idx++, item);
		item.putFloat(_net);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_userComment);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_comment);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_essLocation);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_feedId);
		da.setDataItem(sa_idx++, item);
		item.putInt(_underlyingId);
		da.setDataItem(sa_idx++, item);
		item.putInt(_indexId);
		da.setDataItem(sa_idx++, item);
		item.putInt(_status);
		da.setDataItem(sa_idx++, item);
		item.putInt(_divId);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_spillType);
		da.setDataItem(sa_idx++, item);
		item.putInt(_userIdCreate);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_userNameCreate);
		da.setDataItem(sa_idx++, item);
		item.DataItemClear();
		return da;
	}
	public void readCache(DataArray in) throws FastCacheException {
		int sa_idx = 0;
		in.getDataItem(sa_idx++, item);
		_exDate = item.getDate();
		in.getDataItem(sa_idx++, item);
		_recDate = item.getDate();
		in.getDataItem(sa_idx++, item);
		_payDate = item.getDate();
		in.getDataItem(sa_idx++, item);
		_annDate = item.getDate();
		in.getDataItem(sa_idx++, item);
		_ticker = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_constTicker = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_dividendSource = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_divCcy = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_gross = item.getFloat();
		in.getDataItem(sa_idx++, item);
		_net = item.getFloat();
		in.getDataItem(sa_idx++, item);
		_userComment = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_comment = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_essLocation = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_feedId = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_underlyingId = item.getInt();
		in.getDataItem(sa_idx++, item);
		_indexId = item.getInt();
		in.getDataItem(sa_idx++, item);
		_status = item.getInt();
		in.getDataItem(sa_idx++, item);
		_divId = item.getInt();
		in.getDataItem(sa_idx++, item);
		_spillType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_userIdCreate = item.getInt();
		in.getDataItem(sa_idx++, item);
		_userNameCreate = item.getCharArray();
	}
	public void writeObject(byte [] data) throws FastCacheException {
		item.writeObject(data);
		DataArray in = new DataArray();
		item.getDataArray(in);
		readCache(in);
	}
	public byte [] readObject() throws FastCacheException, IOException {
		DataArray requestDA = writeCache();
		item.putDataArray(requestDA);
		return item.readObject();
	}
	private Date _exDate =  new Date();
	private Date _recDate =  new Date();
	private Date _payDate =  new Date();
	private Date _annDate =  new Date();
	private char[] _ticker;
	private char[] _constTicker;
	private char[] _dividendSource;
	private char[] _divCcy;
	private float _gross;
	private float _net;
	private char[] _userComment;
	private char[] _comment;
	private char[] _essLocation;
	private char[] _feedId;
	private int _underlyingId;
	private int _indexId;
	private int _status;
	private int _divId;
	private char[] _spillType;
	private int _userIdCreate;
	private char[] _userNameCreate;
	private DataItem item = new DataItem();
}

