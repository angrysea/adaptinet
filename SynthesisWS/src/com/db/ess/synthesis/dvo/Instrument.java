// Title:        Instrument
// Author:       Generate code
// Company:      
// Description:  This class was generated by the XML-Broker Developer Console
// Schema name:  /home/anthony/workspace/SynthesisWS/schema/Synthesis.xsd
// Java SDK:     

package com.db.ess.synthesis.dvo;

import java.util.Date;
import java.io.IOException;

import org.adaptinet.sdk.adaptinetex.FastCacheException;
import org.adaptinet.sdk.fastcache.CacheServer;
import org.adaptinet.sdk.fastcache.DataArray;
import org.adaptinet.sdk.fastcache.DataItem;
import org.adaptinet.sdk.fastcache.FastCacheDVOBase;

public class Instrument implements FastCacheDVOBase  {
	public Date getlastActivityTime() { 
		return _lastActivityTime;
	}
	public void setlastActivityTime(Date newValue) { 
		_lastActivityTime = newValue;
	}
	public String getinstrumentName() {
		if(_instrumentName!=null) {
			return new String(_instrumentName);
		}
		else {
			return null;
		}
	}
	public void setinstrumentName(String newValue) {
		_instrumentName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getinstrumentType() {
		if(_instrumentType!=null) {
			return new String(_instrumentType);
		}
		else {
			return null;
		}
	}
	public void setinstrumentType(String newValue) {
		_instrumentType = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getticker_RIC() {
		if(_ticker_RIC!=null) {
			return new String(_ticker_RIC);
		}
		else {
			return null;
		}
	}
	public void setticker_RIC(String newValue) {
		_ticker_RIC = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getRIC() {
		if(_RIC!=null) {
			return new String(_RIC);
		}
		else {
			return null;
		}
	}
	public void setRIC(String newValue) {
		_RIC = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getCUSIP() {
		if(_CUSIP!=null) {
			return new String(_CUSIP);
		}
		else {
			return null;
		}
	}
	public void setCUSIP(String newValue) {
		_CUSIP = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getISIN() {
		if(_ISIN!=null) {
			return new String(_ISIN);
		}
		else {
			return null;
		}
	}
	public void setISIN(String newValue) {
		_ISIN = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getSEDOL() {
		if(_SEDOL!=null) {
			return new String(_SEDOL);
		}
		else {
			return null;
		}
	}
	public void setSEDOL(String newValue) {
		_SEDOL = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getlocalReference() {
		if(_localReference!=null) {
			return new String(_localReference);
		}
		else {
			return null;
		}
	}
	public void setlocalReference(String newValue) {
		_localReference = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getdescription() {
		if(_description!=null) {
			return new String(_description);
		}
		else {
			return null;
		}
	}
	public void setdescription(String newValue) {
		_description = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getissuer() {
		if(_issuer!=null) {
			return new String(_issuer);
		}
		else {
			return null;
		}
	}
	public void setissuer(String newValue) {
		_issuer = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getprimExchangeCode() {
		if(_primExchangeCode!=null) {
			return new String(_primExchangeCode);
		}
		else {
			return null;
		}
	}
	public void setprimExchangeCode(String newValue) {
		_primExchangeCode = newValue!=null ? newValue.toCharArray() : null;
	}
	public double getmultiplier() {
		return _multiplier;
	}
	public void setmultiplier(double newValue) {
		_multiplier = newValue;
	}
	public String getstatus() {
		if(_status!=null) {
			return new String(_status);
		}
		else {
			return null;
		}
	}
	public void setstatus(String newValue) {
		_status = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getsicCode() {
		if(_sicCode!=null) {
			return new String(_sicCode);
		}
		else {
			return null;
		}
	}
	public void setsicCode(String newValue) {
		_sicCode = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getpriceFrequency() {
		if(_priceFrequency!=null) {
			return new String(_priceFrequency);
		}
		else {
			return null;
		}
	}
	public void setpriceFrequency(String newValue) {
		_priceFrequency = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getpriceType() {
		if(_priceType!=null) {
			return new String(_priceType);
		}
		else {
			return null;
		}
	}
	public void setpriceType(String newValue) {
		_priceType = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getpriceSource() {
		if(_priceSource!=null) {
			return new String(_priceSource);
		}
		else {
			return null;
		}
	}
	public void setpriceSource(String newValue) {
		_priceSource = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getlocalCcy() {
		if(_localCcy!=null) {
			return new String(_localCcy);
		}
		else {
			return null;
		}
	}
	public void setlocalCcy(String newValue) {
		_localCcy = newValue!=null ? newValue.toCharArray() : null;
	}
	public String gettrdCcy() {
		if(_trdCcy!=null) {
			return new String(_trdCcy);
		}
		else {
			return null;
		}
	}
	public void settrdCcy(String newValue) {
		_trdCcy = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getstlCcy() {
		if(_stlCcy!=null) {
			return new String(_stlCcy);
		}
		else {
			return null;
		}
	}
	public void setstlCcy(String newValue) {
		_stlCcy = newValue!=null ? newValue.toCharArray() : null;
	}
	public String gettradeCountry() {
		if(_tradeCountry!=null) {
			return new String(_tradeCountry);
		}
		else {
			return null;
		}
	}
	public void settradeCountry(String newValue) {
		_tradeCountry = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getissueCountry() {
		if(_issueCountry!=null) {
			return new String(_issueCountry);
		}
		else {
			return null;
		}
	}
	public void setissueCountry(String newValue) {
		_issueCountry = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getlastActivityUser() {
		if(_lastActivityUser!=null) {
			return new String(_lastActivityUser);
		}
		else {
			return null;
		}
	}
	public void setlastActivityUser(String newValue) {
		_lastActivityUser = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getliquiditySummary() {
		if(_liquiditySummary!=null) {
			return new String(_liquiditySummary);
		}
		else {
			return null;
		}
	}
	public void setliquiditySummary(String newValue) {
		_liquiditySummary = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getessLocation() {
		return _essLocation;
	}
	public void setessLocation(int newValue) {
		_essLocation = newValue;
	}
	public String getinstrCcy() {
		if(_instrCcy!=null) {
			return new String(_instrCcy);
		}
		else {
			return null;
		}
	}
	public void setinstrCcy(String newValue) {
		_instrCcy = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getcountryCode() {
		if(_countryCode!=null) {
			return new String(_countryCode);
		}
		else {
			return null;
		}
	}
	public void setcountryCode(String newValue) {
		_countryCode = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getcountryName() {
		if(_countryName!=null) {
			return new String(_countryName);
		}
		else {
			return null;
		}
	}
	public void setcountryName(String newValue) {
		_countryName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getsecurityType() {
		if(_securityType!=null) {
			return new String(_securityType);
		}
		else {
			return null;
		}
	}
	public void setsecurityType(String newValue) {
		_securityType = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getissueCountryCode() {
		if(_issueCountryCode!=null) {
			return new String(_issueCountryCode);
		}
		else {
			return null;
		}
	}
	public void setissueCountryCode(String newValue) {
		_issueCountryCode = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getissueCountryName() {
		if(_issueCountryName!=null) {
			return new String(_issueCountryName);
		}
		else {
			return null;
		}
	}
	public void setissueCountryName(String newValue) {
		_issueCountryName = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getinstrId() {
		return _instrId;
	}
	public void setinstrId(int newValue) {
		_instrId = newValue;
	}
	public void putToCache(String key, CacheServer server) throws FastCacheException {
		DataArray da = writeCache();
		item.putDataArray(da);
		server.putValue(key, item);
		item.DataItemClear();
	}
	public void getFromCache(String key, CacheServer server) throws FastCacheException {
		DataItem item = server.getValue(key);
		DataArray da = new DataArray();
		item.getDataArray(da);
		readCache(da);
		item.DataItemClear();
	}
	public DataArray writeCache() throws FastCacheException {
		int sa_idx = 0;
		DataArray da = new DataArray(DataItem.DATAITEMDATAITEM, 33);
		item.putDate(_lastActivityTime);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_instrumentName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_instrumentType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_ticker_RIC);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_RIC);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_CUSIP);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_ISIN);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_SEDOL);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_localReference);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_description);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_issuer);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_primExchangeCode);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_multiplier);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_status);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_sicCode);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_priceFrequency);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_priceType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_priceSource);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_localCcy);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_trdCcy);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_stlCcy);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_tradeCountry);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_issueCountry);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_lastActivityUser);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_liquiditySummary);
		da.setDataItem(sa_idx++, item);
		item.putInt(_essLocation);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_instrCcy);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_countryCode);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_countryName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_securityType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_issueCountryCode);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_issueCountryName);
		da.setDataItem(sa_idx++, item);
		item.putInt(_instrId);
		da.setDataItem(sa_idx++, item);
		item.DataItemClear();
		return da;
	}
	public void readCache(DataArray in) throws FastCacheException {
		int sa_idx = 0;
		in.getDataItem(sa_idx++, item);
		_lastActivityTime = item.getDate();
		in.getDataItem(sa_idx++, item);
		_instrumentName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_instrumentType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_ticker_RIC = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_RIC = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_CUSIP = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_ISIN = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_SEDOL = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_localReference = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_description = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_issuer = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_primExchangeCode = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_multiplier = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_status = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_sicCode = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_priceFrequency = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_priceType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_priceSource = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_localCcy = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_trdCcy = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_stlCcy = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_tradeCountry = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_issueCountry = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_lastActivityUser = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_liquiditySummary = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_essLocation = item.getInt();
		in.getDataItem(sa_idx++, item);
		_instrCcy = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_countryCode = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_countryName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_securityType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_issueCountryCode = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_issueCountryName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_instrId = item.getInt();
	}
	public void writeObject(byte [] data) throws FastCacheException {
		item.writeObject(data);
		DataArray in = new DataArray();
		item.getDataArray(in);
		readCache(in);
	}
	public byte [] readObject() throws FastCacheException, IOException {
		DataArray requestDA = writeCache();
		item.putDataArray(requestDA);
		return item.readObject();
	}
	private Date _lastActivityTime =  new Date();
	private char[] _instrumentName;
	private char[] _instrumentType;
	private char[] _ticker_RIC;
	private char[] _RIC;
	private char[] _CUSIP;
	private char[] _ISIN;
	private char[] _SEDOL;
	private char[] _localReference;
	private char[] _description;
	private char[] _issuer;
	private char[] _primExchangeCode;
	private double _multiplier;
	private char[] _status;
	private char[] _sicCode;
	private char[] _priceFrequency;
	private char[] _priceType;
	private char[] _priceSource;
	private char[] _localCcy;
	private char[] _trdCcy;
	private char[] _stlCcy;
	private char[] _tradeCountry;
	private char[] _issueCountry;
	private char[] _lastActivityUser;
	private char[] _liquiditySummary;
	private int _essLocation;
	private char[] _instrCcy;
	private char[] _countryCode;
	private char[] _countryName;
	private char[] _securityType;
	private char[] _issueCountryCode;
	private char[] _issueCountryName;
	private int _instrId;
	private DataItem item = new DataItem();
}

