// Title:        SavedView
// Author:       Generate code
// Company:      
// Description:  This class was generated by the XML-Broker Developer Console
// Schema name:  /home/anthony/workspace/SynthesisWS/schema/Synthesis.xsd
// Java SDK:     

package com.db.ess.synthesis.dvo;

import java.util.Date;
import java.io.IOException;

import org.adaptinet.sdk.adaptinetex.FastCacheException;
import org.adaptinet.sdk.fastcache.CacheServer;
import org.adaptinet.sdk.fastcache.DataArray;
import org.adaptinet.sdk.fastcache.DataItem;
import org.adaptinet.sdk.fastcache.FastCacheDVOBase;

public class SavedView implements FastCacheDVOBase  {
	public int getuserId() {
		return _userId;
	}
	public void setuserId(int newValue) {
		_userId = newValue;
	}
	public String getviewerName() {
		if(_viewerName!=null) {
			return new String(_viewerName);
		}
		else {
			return null;
		}
	}
	public void setviewerName(String newValue) {
		_viewerName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getcomponentName() {
		if(_componentName!=null) {
			return new String(_componentName);
		}
		else {
			return null;
		}
	}
	public void setcomponentName(String newValue) {
		_componentName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getsavedViewName() {
		if(_savedViewName!=null) {
			return new String(_savedViewName);
		}
		else {
			return null;
		}
	}
	public void setsavedViewName(String newValue) {
		_savedViewName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getoldSavedViewName() {
		if(_oldSavedViewName!=null) {
			return new String(_oldSavedViewName);
		}
		else {
			return null;
		}
	}
	public void setoldSavedViewName(String newValue) {
		_oldSavedViewName = newValue!=null ? newValue.toCharArray() : null;
	}
	public boolean getisPublic() {
		return _isPublic;
	}
	public void setisPublic(boolean newValue) {
		_isPublic = newValue;
	}
	public Date getlastUpdated() {
		return _lastUpdated;
	}
	public void setlastUpdated(Date newValue) {
		_lastUpdated = newValue;
	}
	public String getlayout() {
		if(_layout!=null) {
			return new String(_layout);
		}
		else {
			return null;
		}
	}
	public void setlayout(String newValue) {
		_layout = newValue!=null ? newValue.toCharArray() : null;
	}
	public void putToCache(String key, CacheServer server) throws FastCacheException {
		DataArray da = writeCache();
		item.putDataArray(da);
		server.putValue(key, item);
		item.DataItemClear();
	}
	public void getFromCache(String key, CacheServer server) throws FastCacheException {
		DataItem item = server.getValue(key);
		DataArray da = new DataArray();
		item.getDataArray(da);
		readCache(da);
		item.DataItemClear();
	}
	public DataArray writeCache() throws FastCacheException {
		int sa_idx = 0;
		DataArray da = new DataArray(DataItem.DATAITEMDATAITEM, 8);
		item.putInt(_userId);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_viewerName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_componentName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_savedViewName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_oldSavedViewName);
		da.setDataItem(sa_idx++, item);
		item.putBoolean(_isPublic);
		da.setDataItem(sa_idx++, item);
		item.putDate(_lastUpdated);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_layout);
		da.setDataItem(sa_idx++, item);
		item.DataItemClear();
		return da;
	}
	public void readCache(DataArray in) throws FastCacheException {
		int sa_idx = 0;
		in.getDataItem(sa_idx++, item);
		_userId = item.getInt();
		in.getDataItem(sa_idx++, item);
		_viewerName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_componentName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_savedViewName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_oldSavedViewName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_isPublic = item.getBoolean();
		in.getDataItem(sa_idx++, item);
		_lastUpdated = item.getDate();
		in.getDataItem(sa_idx++, item);
		_layout = item.getCharArray();
	}
	public void writeObject(byte [] data) throws FastCacheException {
		item.writeObject(data);
		DataArray in = new DataArray();
		item.getDataArray(in);
		readCache(in);
	}
	public byte [] readObject() throws FastCacheException, IOException {
		DataArray requestDA = writeCache();
		item.putDataArray(requestDA);
		return item.readObject();
	}
	private int _userId;
	private char[] _viewerName;
	private char[] _componentName;
	private char[] _savedViewName;
	private char[] _oldSavedViewName;
	private boolean _isPublic;
	private Date _lastUpdated;
	private char[] _layout;
	private DataItem item = new DataItem();
}

