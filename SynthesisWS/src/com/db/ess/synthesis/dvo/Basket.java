// Title:        Basket
// Author:       Generate code
// Company:      
// Description:  This class was generated by the XML-Broker Developer Console
// Schema name:  /home/anthony/workspace/SynthesisWS/schema/Synthesis.xsd
// Java SDK:     

package com.db.ess.synthesis.dvo;

import java.util.Date;
import java.io.IOException;

import org.adaptinet.sdk.adaptinetex.FastCacheException;
import org.adaptinet.sdk.fastcache.CacheServer;
import org.adaptinet.sdk.fastcache.DataArray;
import org.adaptinet.sdk.fastcache.DataItem;
import org.adaptinet.sdk.fastcache.FastCacheDVOBase;

public class Basket implements FastCacheDVOBase  {
	public Date getBasketCreationTime() { 
		return _BasketCreationTime;
	}
	public void setBasketCreationTime(Date newValue) { 
		_BasketCreationTime = newValue;
	}
	public Date getLastModifiedTime() { 
		return _LastModifiedTime;
	}
	public void setLastModifiedTime(Date newValue) { 
		_LastModifiedTime = newValue;
	}
	public Date getAsAtDate() { 
		return _AsAtDate;
	}
	public void setAsAtDate(Date newValue) { 
		_AsAtDate = newValue;
	}
	public Date getBasketBaseDate() { 
		return _BasketBaseDate;
	}
	public void setBasketBaseDate(Date newValue) { 
		_BasketBaseDate = newValue;
	}
	public String getAction() {
		if(_Action!=null) {
			return new String(_Action);
		}
		else {
			return null;
		}
	}
	public void setAction(String newValue) {
		_Action = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getAdditionalContact() {
		if(_AdditionalContact!=null) {
			return new String(_AdditionalContact);
		}
		else {
			return null;
		}
	}
	public void setAdditionalContact(String newValue) {
		_AdditionalContact = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getAsAtDateType() {
		return _AsAtDateType;
	}
	public void setAsAtDateType(int newValue) {
		_AsAtDateType = newValue;
	}
	public String getAtomId() {
		if(_AtomId!=null) {
			return new String(_AtomId);
		}
		else {
			return null;
		}
	}
	public void setAtomId(String newValue) {
		_AtomId = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getBasketClone() {
		if(_BasketClone!=null) {
			return new String(_BasketClone);
		}
		else {
			return null;
		}
	}
	public void setBasketClone(String newValue) {
		_BasketClone = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getBasketCreator() {
		if(_BasketCreator!=null) {
			return new String(_BasketCreator);
		}
		else {
			return null;
		}
	}
	public void setBasketCreator(String newValue) {
		_BasketCreator = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getBasketCurrency() {
		if(_BasketCurrency!=null) {
			return new String(_BasketCurrency);
		}
		else {
			return null;
		}
	}
	public void setBasketCurrency(String newValue) {
		_BasketCurrency = newValue!=null ? newValue.toCharArray() : null;
	}
	public double getBasketDividendReinvestRate() {
		return _BasketDividendReinvestRate;
	}
	public void setBasketDividendReinvestRate(double newValue) {
		_BasketDividendReinvestRate = newValue;
	}
	public int getBasketId() {
		return _BasketId;
	}
	public void setBasketId(int newValue) {
		_BasketId = newValue;
	}
	public double getBasketInceptionLevel() {
		return _BasketInceptionLevel;
	}
	public void setBasketInceptionLevel(double newValue) {
		_BasketInceptionLevel = newValue;
	}
	public String getBasketName() {
		if(_BasketName!=null) {
			return new String(_BasketName);
		}
		else {
			return null;
		}
	}
	public void setBasketName(String newValue) {
		_BasketName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getBasketOwner() {
		if(_BasketOwner!=null) {
			return new String(_BasketOwner);
		}
		else {
			return null;
		}
	}
	public void setBasketOwner(String newValue) {
		_BasketOwner = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getBasketRegion() {
		if(_BasketRegion!=null) {
			return new String(_BasketRegion);
		}
		else {
			return null;
		}
	}
	public void setBasketRegion(String newValue) {
		_BasketRegion = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getBasketReturnType() {
		if(_BasketReturnType!=null) {
			return new String(_BasketReturnType);
		}
		else {
			return null;
		}
	}
	public void setBasketReturnType(String newValue) {
		_BasketReturnType = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getBasketShortName() {
		if(_BasketShortName!=null) {
			return new String(_BasketShortName);
		}
		else {
			return null;
		}
	}
	public void setBasketShortName(String newValue) {
		_BasketShortName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getBasketStatus() {
		if(_BasketStatus!=null) {
			return new String(_BasketStatus);
		}
		else {
			return null;
		}
	}
	public void setBasketStatus(String newValue) {
		_BasketStatus = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getBasketType() {
		if(_BasketType!=null) {
			return new String(_BasketType);
		}
		else {
			return null;
		}
	}
	public void setBasketType(String newValue) {
		_BasketType = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getBloombergTicker() {
		if(_BloombergTicker!=null) {
			return new String(_BloombergTicker);
		}
		else {
			return null;
		}
	}
	public void setBloombergTicker(String newValue) {
		_BloombergTicker = newValue!=null ? newValue.toCharArray() : null;
	}
	public double getDivisor() {
		return _Divisor;
	}
	public void setDivisor(double newValue) {
		_Divisor = newValue;
	}
	public String getExchangeByte() {
		if(_ExchangeByte!=null) {
			return new String(_ExchangeByte);
		}
		else {
			return null;
		}
	}
	public void setExchangeByte(String newValue) {
		_ExchangeByte = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getHistoricPricingTimePeriod() {
		if(_HistoricPricingTimePeriod!=null) {
			return new String(_HistoricPricingTimePeriod);
		}
		else {
			return null;
		}
	}
	public void setHistoricPricingTimePeriod(String newValue) {
		_HistoricPricingTimePeriod = newValue!=null ? newValue.toCharArray() : null;
	}
	public double getInitialInvestment() {
		return _InitialInvestment;
	}
	public void setInitialInvestment(double newValue) {
		_InitialInvestment = newValue;
	}
	public boolean getIsConstituentPublishing() {
		return _IsConstituentPublishing;
	}
	public void setIsConstituentPublishing(boolean newValue) {
		_IsConstituentPublishing = newValue;
	}
	public boolean getIsHistoricPricing() {
		return _IsHistoricPricing;
	}
	public void setIsHistoricPricing(boolean newValue) {
		_IsHistoricPricing = newValue;
	}
	public boolean getIsUnits() {
		return _IsUnits;
	}
	public void setIsUnits(boolean newValue) {
		_IsUnits = newValue;
	}
	public String getLastModifiedBy() {
		if(_LastModifiedBy!=null) {
			return new String(_LastModifiedBy);
		}
		else {
			return null;
		}
	}
	public void setLastModifiedBy(String newValue) {
		_LastModifiedBy = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getNotes() {
		if(_Notes!=null) {
			return new String(_Notes);
		}
		else {
			return null;
		}
	}
	public void setNotes(String newValue) {
		_Notes = newValue!=null ? newValue.toCharArray() : null;
	}
	public double getPerformaceFactor() {
		return _PerformaceFactor;
	}
	public void setPerformaceFactor(double newValue) {
		_PerformaceFactor = newValue;
	}
	public int getPublishTo() {
		return _PublishTo;
	}
	public void setPublishTo(int newValue) {
		_PublishTo = newValue;
	}
	public String getReutersRic() {
		if(_ReutersRic!=null) {
			return new String(_ReutersRic);
		}
		else {
			return null;
		}
	}
	public void setReutersRic(String newValue) {
		_ReutersRic = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getSalesContact() {
		if(_SalesContact!=null) {
			return new String(_SalesContact);
		}
		else {
			return null;
		}
	}
	public void setSalesContact(String newValue) {
		_SalesContact = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getVersion() {
		return _Version;
	}
	public void setVersion(int newValue) {
		_Version = newValue;
	}
	public double getCurrentLevel() {
		return _CurrentLevel;
	}
	public void setCurrentLevel(double newValue) {
		_CurrentLevel = newValue;
	}
	public String getSynopsis() {
		if(_Synopsis!=null) {
			return new String(_Synopsis);
		}
		else {
			return null;
		}
	}
	public void setSynopsis(String newValue) {
		_Synopsis = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getUserLocation() {
		if(_UserLocation!=null) {
			return new String(_UserLocation);
		}
		else {
			return null;
		}
	}
	public void setUserLocation(String newValue) {
		_UserLocation = newValue!=null ? newValue.toCharArray() : null;
	}
	public void putToCache(String key, CacheServer server) throws FastCacheException {
		DataArray da = writeCache();
		item.putDataArray(da);
		server.putValue(key, item);
		item.DataItemClear();
	}
	public void getFromCache(String key, CacheServer server) throws FastCacheException {
		DataItem item = server.getValue(key);
		DataArray da = new DataArray();
		item.getDataArray(da);
		readCache(da);
		item.DataItemClear();
	}
	public DataArray writeCache() throws FastCacheException {
		int sa_idx = 0;
		DataArray da = new DataArray(DataItem.DATAITEMDATAITEM, 39);
		item.putDate(_BasketCreationTime);
		da.setDataItem(sa_idx++, item);
		item.putDate(_LastModifiedTime);
		da.setDataItem(sa_idx++, item);
		item.putDate(_AsAtDate);
		da.setDataItem(sa_idx++, item);
		item.putDate(_BasketBaseDate);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_Action);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_AdditionalContact);
		da.setDataItem(sa_idx++, item);
		item.putInt(_AsAtDateType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_AtomId);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_BasketClone);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_BasketCreator);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_BasketCurrency);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_BasketDividendReinvestRate);
		da.setDataItem(sa_idx++, item);
		item.putInt(_BasketId);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_BasketInceptionLevel);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_BasketName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_BasketOwner);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_BasketRegion);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_BasketReturnType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_BasketShortName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_BasketStatus);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_BasketType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_BloombergTicker);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_Divisor);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_ExchangeByte);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_HistoricPricingTimePeriod);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_InitialInvestment);
		da.setDataItem(sa_idx++, item);
		item.putBoolean(_IsConstituentPublishing);
		da.setDataItem(sa_idx++, item);
		item.putBoolean(_IsHistoricPricing);
		da.setDataItem(sa_idx++, item);
		item.putBoolean(_IsUnits);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_LastModifiedBy);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_Notes);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_PerformaceFactor);
		da.setDataItem(sa_idx++, item);
		item.putInt(_PublishTo);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_ReutersRic);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_SalesContact);
		da.setDataItem(sa_idx++, item);
		item.putInt(_Version);
		da.setDataItem(sa_idx++, item);
		item.putDouble(_CurrentLevel);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_Synopsis);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_UserLocation);
		da.setDataItem(sa_idx++, item);
		item.DataItemClear();
		return da;
	}
	public void readCache(DataArray in) throws FastCacheException {
		int sa_idx = 0;
		in.getDataItem(sa_idx++, item);
		_BasketCreationTime = item.getDate();
		in.getDataItem(sa_idx++, item);
		_LastModifiedTime = item.getDate();
		in.getDataItem(sa_idx++, item);
		_AsAtDate = item.getDate();
		in.getDataItem(sa_idx++, item);
		_BasketBaseDate = item.getDate();
		in.getDataItem(sa_idx++, item);
		_Action = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_AdditionalContact = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_AsAtDateType = item.getInt();
		in.getDataItem(sa_idx++, item);
		_AtomId = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_BasketClone = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_BasketCreator = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_BasketCurrency = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_BasketDividendReinvestRate = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_BasketId = item.getInt();
		in.getDataItem(sa_idx++, item);
		_BasketInceptionLevel = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_BasketName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_BasketOwner = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_BasketRegion = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_BasketReturnType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_BasketShortName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_BasketStatus = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_BasketType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_BloombergTicker = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_Divisor = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_ExchangeByte = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_HistoricPricingTimePeriod = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_InitialInvestment = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_IsConstituentPublishing = item.getBoolean();
		in.getDataItem(sa_idx++, item);
		_IsHistoricPricing = item.getBoolean();
		in.getDataItem(sa_idx++, item);
		_IsUnits = item.getBoolean();
		in.getDataItem(sa_idx++, item);
		_LastModifiedBy = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_Notes = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_PerformaceFactor = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_PublishTo = item.getInt();
		in.getDataItem(sa_idx++, item);
		_ReutersRic = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_SalesContact = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_Version = item.getInt();
		in.getDataItem(sa_idx++, item);
		_CurrentLevel = item.getDouble();
		in.getDataItem(sa_idx++, item);
		_Synopsis = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_UserLocation = item.getCharArray();
	}
	public void writeObject(byte [] data) throws FastCacheException {
		item.writeObject(data);
		DataArray in = new DataArray();
		item.getDataArray(in);
		readCache(in);
	}
	public byte [] readObject() throws FastCacheException, IOException {
		DataArray requestDA = writeCache();
		item.putDataArray(requestDA);
		return item.readObject();
	}
	private Date _BasketCreationTime =  new Date();
	private Date _LastModifiedTime =  new Date();
	private Date _AsAtDate =  new Date();
	private Date _BasketBaseDate =  new Date();
	private char[] _Action;
	private char[] _AdditionalContact;
	private int _AsAtDateType;
	private char[] _AtomId;
	private char[] _BasketClone;
	private char[] _BasketCreator;
	private char[] _BasketCurrency;
	private double _BasketDividendReinvestRate;
	private int _BasketId;
	private double _BasketInceptionLevel;
	private char[] _BasketName;
	private char[] _BasketOwner;
	private char[] _BasketRegion;
	private char[] _BasketReturnType;
	private char[] _BasketShortName;
	private char[] _BasketStatus;
	private char[] _BasketType;
	private char[] _BloombergTicker;
	private double _Divisor;
	private char[] _ExchangeByte;
	private char[] _HistoricPricingTimePeriod;
	private double _InitialInvestment;
	private boolean _IsConstituentPublishing;
	private boolean _IsHistoricPricing;
	private boolean _IsUnits;
	private char[] _LastModifiedBy;
	private char[] _Notes;
	private double _PerformaceFactor;
	private int _PublishTo;
	private char[] _ReutersRic;
	private char[] _SalesContact;
	private int _Version;
	private double _CurrentLevel;
	private char[] _Synopsis;
	private char[] _UserLocation;
	private DataItem item = new DataItem();
}

