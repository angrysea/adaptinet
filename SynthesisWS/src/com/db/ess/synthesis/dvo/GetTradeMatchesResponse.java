// Title:        GetTradeMatchesResponse
// Author:       Generate code
// Company:      
// Description:  This class was generated by the XML-Broker Developer Console
// Schema name:  /home/anthony/workspace/SynthesisWS/schema/Synthesis.xsd
// Java SDK:     

package com.db.ess.synthesis.dvo;

import java.util.Iterator;
import java.util.NoSuchElementException;
import java.io.IOException;

import org.adaptinet.sdk.adaptinetex.FastCacheException;
import org.adaptinet.sdk.fastcache.CacheServer;
import org.adaptinet.sdk.fastcache.DataArray;
import org.adaptinet.sdk.fastcache.DataItem;
import org.adaptinet.sdk.fastcache.FastCacheDVOBase;

public class GetTradeMatchesResponse implements FastCacheDVOBase  {
	public ReturnResponse getreturnResponse() { 
		return _returnResponse;
	}
	public void setreturnResponse(ReturnResponse newValue) { 
		_returnResponse = newValue;
	}
	public long gettradeMatchesCount() { 
		return _tradeMatchesCount;
	}
	public TradeMatch[] gettradeMatchesArray() { 
		return _tradeMatches;
	}
	public void settradeMatchesArray(TradeMatch newValue[]) { 
		_tradeMatches=newValue;
	}
	@SuppressWarnings("rawtypes")
	public Iterator gettradeMatchesIterator() { 
		return new Iterator() {
			int cursor=0;
			int last=-1;
			public boolean hasNext() {
				if(_tradeMatches==null) return false;
				if(last<0) {
					last = _tradeMatches.length;
					while(--last>-1&&_tradeMatches[last]==null);
					last++;
				}
				return cursor!=last;
			}
			public Object next() {
				try {
					return _tradeMatches[cursor++];
				} catch(IndexOutOfBoundsException e) {
					throw new NoSuchElementException();
				}
			}
			public void remove() {
				try {
					_tradeMatches[cursor++]=null;
				} catch(IndexOutOfBoundsException e) {
					throw new NoSuchElementException();
				}
			}
		};
	}
	public TradeMatch gettradeMatches(int idx) { 
		return (TradeMatch)_tradeMatches[idx];
	}
	public void settradeMatches(TradeMatch newValue) { 
		if(_tradeMatches!=null) {
			int __OPEN_A=-1;
			for(int __I_A=0;__I_A<_tradeMatches.length;__I_A++) {
				if(_tradeMatches[__I_A]==null) {
					__OPEN_A=__I_A;
					break;
				}
			}
			if(__OPEN_A<0) {
				__OPEN_A=_tradeMatches.length;
				TradeMatch array[] = new TradeMatch[__OPEN_A+10];
				System.arraycopy(_tradeMatches,0,array,0,_tradeMatches.length);
				_tradeMatches = array;
			}
			_tradeMatches[__OPEN_A] = newValue;
		}
		else {
			_tradeMatches = new TradeMatch[10];
			_tradeMatches[0] = newValue;
		}
		_tradeMatchesCount++;
	}
	public void putToCache(String key, CacheServer server) throws FastCacheException {
		DataArray da = writeCache();
		item.putDataArray(da);
		server.putValue(key, item);
		item.DataItemClear();
	}
	public void getFromCache(String key, CacheServer server) throws FastCacheException {
		DataItem item = server.getValue(key);
		DataArray da = new DataArray();
		item.getDataArray(da);
		readCache(da);
		item.DataItemClear();
	}
	public DataArray writeCache() throws FastCacheException {
		int sa_idx = 0;
		DataArray da = new DataArray(DataItem.DATAITEMDATAITEM, 2);
		item.putDataArray(_returnResponse.writeCache());
		da.setDataItem(sa_idx++, item);
		if(_tradeMatches!=null) {
			DataArray daChild = new DataArray(DataItem.DATAITEMARRAY, _tradeMatchesCount);
			for(int __I_A=0;__I_A<_tradeMatchesCount;__I_A++) {
				daChild.setDataArray(__I_A, _tradeMatches[__I_A].writeCache());
			}
			item.putDataArray(daChild);
		}
		else {
			item.putEmpty();
		}
		da.setDataItem(sa_idx++, item);
		item.DataItemClear();
		return da;
	}
	public void readCache(DataArray in) throws FastCacheException {
		int sa_idx = 0;
		DataArray daItem = new DataArray();
		DataArray daElement = new DataArray();
		in.getDataItem(sa_idx++, item);
		item.getDataArray(daItem);
		_returnResponse.readCache(daItem);
		in.getDataItem(sa_idx++, item);
		item.getDataArray(daItem);
		_tradeMatchesCount = daItem.getElements();
		if(_tradeMatchesCount>0) {
			_tradeMatches = new TradeMatch [(int)_tradeMatchesCount];
			for(int __I_A=0;__I_A<_tradeMatchesCount;__I_A++) {
				_tradeMatches[__I_A] = new TradeMatch();
				daItem.getDataArray(__I_A, daElement);
				_tradeMatches[__I_A].readCache(daElement);
			}
		}
	}
	public void writeObject(byte [] data) throws FastCacheException {
		item.writeObject(data);
		DataArray in = new DataArray();
		item.getDataArray(in);
		readCache(in);
	}
	public byte [] readObject() throws FastCacheException, IOException {
		DataArray requestDA = writeCache();
		item.putDataArray(requestDA);
		return item.readObject();
	}
	private ReturnResponse _returnResponse =  new ReturnResponse();
	private TradeMatch _tradeMatches[] = null;
	private long _tradeMatchesCount = 0;
	private DataItem item = new DataItem();
}

