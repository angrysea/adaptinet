// Title:        GetSwapRequest
// Author:       Generate code
// Company:      
// Description:  This class was generated by the XML-Broker Developer Console
// Schema name:  /home/anthony/workspace/SynthesisWS/schema/Synthesis.xsd
// Java SDK:     

package com.db.ess.synthesis.dvo;

import java.util.Date;
import java.io.IOException;

import org.adaptinet.sdk.adaptinetex.FastCacheException;
import org.adaptinet.sdk.fastcache.CacheServer;
import org.adaptinet.sdk.fastcache.DataArray;
import org.adaptinet.sdk.fastcache.DataItem;
import org.adaptinet.sdk.fastcache.FastCacheDVOBase;

public class GetSwapRequest implements FastCacheDVOBase  {
	public String getdateValueFrom() {
		if(_dateValueFrom!=null) {
			return new String(_dateValueFrom);
		}
		else {
			return null;
		}
	}
	public void setdateValueFrom(String newValue) {
		_dateValueFrom = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getdateValueTo() {
		if(_dateValueTo!=null) {
			return new String(_dateValueTo);
		}
		else {
			return null;
		}
	}
	public void setdateValueTo(String newValue) {
		_dateValueTo = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getlocation() {
		return _location;
	}
	public void setlocation(int newValue) {
		_location = newValue;
	}
	public int getuserId() {
		return _userId;
	}
	public void setuserId(int newValue) {
		_userId = newValue;
	}
	public String getdateType() {
		if(_dateType!=null) {
			return new String(_dateType);
		}
		else {
			return null;
		}
	}
	public void setdateType(String newValue) {
		_dateType = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getswapNum() {
		if(_swapNum!=null) {
			return new String(_swapNum);
		}
		else {
			return null;
		}
	}
	public void setswapNum(String newValue) {
		_swapNum = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getswapName() {
		if(_swapName!=null) {
			return new String(_swapName);
		}
		else {
			return null;
		}
	}
	public void setswapName(String newValue) {
		_swapName = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getstatus() {
		if(_status!=null) {
			return new String(_status);
		}
		else {
			return null;
		}
	}
	public void setstatus(String newValue) {
		_status = newValue!=null ? newValue.toCharArray() : null;
	}
	public String gettradeParty() {
		if(_tradeParty!=null) {
			return new String(_tradeParty);
		}
		else {
			return null;
		}
	}
	public void settradeParty(String newValue) {
		_tradeParty = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getlegalEntity() {
		if(_legalEntity!=null) {
			return new String(_legalEntity);
		}
		else {
			return null;
		}
	}
	public void setlegalEntity(String newValue) {
		_legalEntity = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getinstitution() {
		if(_institution!=null) {
			return new String(_institution);
		}
		else {
			return null;
		}
	}
	public void setinstitution(String newValue) {
		_institution = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getbook() {
		if(_book!=null) {
			return new String(_book);
		}
		else {
			return null;
		}
	}
	public void setbook(String newValue) {
		_book = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getaccount() {
		if(_account!=null) {
			return new String(_account);
		}
		else {
			return null;
		}
	}
	public void setaccount(String newValue) {
		_account = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getdesk() {
		if(_desk!=null) {
			return new String(_desk);
		}
		else {
			return null;
		}
	}
	public void setdesk(String newValue) {
		_desk = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getbusinessUnit() {
		if(_businessUnit!=null) {
			return new String(_businessUnit);
		}
		else {
			return null;
		}
	}
	public void setbusinessUnit(String newValue) {
		_businessUnit = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getopenPosition() {
		return _openPosition;
	}
	public void setopenPosition(int newValue) {
		_openPosition = newValue;
	}
	public String getstrategy() {
		if(_strategy!=null) {
			return new String(_strategy);
		}
		else {
			return null;
		}
	}
	public void setstrategy(String newValue) {
		_strategy = newValue!=null ? newValue.toCharArray() : null;
	}
	public String getdomain() {
		if(_domain!=null) {
			return new String(_domain);
		}
		else {
			return null;
		}
	}
	public void setdomain(String newValue) {
		_domain = newValue!=null ? newValue.toCharArray() : null;
	}
	public int getmaturedSwaps() {
		return _maturedSwaps;
	}
	public void setmaturedSwaps(int newValue) {
		_maturedSwaps = newValue;
	}
	public int getsearchAll() {
		return _searchAll;
	}
	public void setsearchAll(int newValue) {
		_searchAll = newValue;
	}
	public Date getautomatureDate() {
		return _automatureDate;
	}
	public void setautomatureDate(Date newValue) {
		_automatureDate = newValue;
	}
	public int getdebug() {
		return _debug;
	}
	public void setdebug(int newValue) {
		_debug = newValue;
	}
	public void putToCache(String key, CacheServer server) throws FastCacheException {
		DataArray da = writeCache();
		item.putDataArray(da);
		server.putValue(key, item);
		item.DataItemClear();
	}
	public void getFromCache(String key, CacheServer server) throws FastCacheException {
		DataItem item = server.getValue(key);
		DataArray da = new DataArray();
		item.getDataArray(da);
		readCache(da);
		item.DataItemClear();
	}
	public DataArray writeCache() throws FastCacheException {
		int sa_idx = 0;
		DataArray da = new DataArray(DataItem.DATAITEMDATAITEM, 22);
		item.putCharArray(_dateValueFrom);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_dateValueTo);
		da.setDataItem(sa_idx++, item);
		item.putInt(_location);
		da.setDataItem(sa_idx++, item);
		item.putInt(_userId);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_dateType);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_swapNum);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_swapName);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_status);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_tradeParty);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_legalEntity);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_institution);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_book);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_account);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_desk);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_businessUnit);
		da.setDataItem(sa_idx++, item);
		item.putInt(_openPosition);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_strategy);
		da.setDataItem(sa_idx++, item);
		item.putCharArray(_domain);
		da.setDataItem(sa_idx++, item);
		item.putInt(_maturedSwaps);
		da.setDataItem(sa_idx++, item);
		item.putInt(_searchAll);
		da.setDataItem(sa_idx++, item);
		item.putDate(_automatureDate);
		da.setDataItem(sa_idx++, item);
		item.putInt(_debug);
		da.setDataItem(sa_idx++, item);
		item.DataItemClear();
		return da;
	}
	public void readCache(DataArray in) throws FastCacheException {
		int sa_idx = 0;
		in.getDataItem(sa_idx++, item);
		_dateValueFrom = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_dateValueTo = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_location = item.getInt();
		in.getDataItem(sa_idx++, item);
		_userId = item.getInt();
		in.getDataItem(sa_idx++, item);
		_dateType = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_swapNum = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_swapName = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_status = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_tradeParty = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_legalEntity = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_institution = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_book = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_account = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_desk = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_businessUnit = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_openPosition = item.getInt();
		in.getDataItem(sa_idx++, item);
		_strategy = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_domain = item.getCharArray();
		in.getDataItem(sa_idx++, item);
		_maturedSwaps = item.getInt();
		in.getDataItem(sa_idx++, item);
		_searchAll = item.getInt();
		in.getDataItem(sa_idx++, item);
		_automatureDate = item.getDate();
		in.getDataItem(sa_idx++, item);
		_debug = item.getInt();
	}
	public void writeObject(byte [] data) throws FastCacheException {
		item.writeObject(data);
		DataArray in = new DataArray();
		item.getDataArray(in);
		readCache(in);
	}
	public byte [] readObject() throws FastCacheException, IOException {
		DataArray requestDA = writeCache();
		item.putDataArray(requestDA);
		return item.readObject();
	}
	private char[] _dateValueFrom;
	private char[] _dateValueTo;
	private int _location;
	private int _userId;
	private char[] _dateType;
	private char[] _swapNum;
	private char[] _swapName;
	private char[] _status;
	private char[] _tradeParty;
	private char[] _legalEntity;
	private char[] _institution;
	private char[] _book;
	private char[] _account;
	private char[] _desk;
	private char[] _businessUnit;
	private int _openPosition;
	private char[] _strategy;
	private char[] _domain;
	private int _maturedSwaps;
	private int _searchAll;
	private Date _automatureDate;
	private int _debug;
	private DataItem item = new DataItem();
}

