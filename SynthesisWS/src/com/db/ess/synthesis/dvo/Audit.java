// Title:        Audit
// Author:       Generate code
// Company:      
// Description:  This class was generated by the XML-Broker Developer Console
// Schema name:  /home/anthony/workspace/SynthesisWS/schema/Synthesis.xsd
// Java SDK:     

package com.db.ess.synthesis.dvo;

import java.util.Date;
import java.io.IOException;

import org.adaptinet.sdk.adaptinetex.FastCacheException;
import org.adaptinet.sdk.fastcache.CacheServer;
import org.adaptinet.sdk.fastcache.DataArray;
import org.adaptinet.sdk.fastcache.DataItem;
import org.adaptinet.sdk.fastcache.FastCacheDVOBase;

public class Audit implements FastCacheDVOBase  {
	public String getfieldName() { 
		return _fieldName;
	}
	public void setfieldName(String newValue) { 
		_fieldName = newValue;
	}
	public String getbefore() { 
		return _before;
	}
	public void setbefore(String newValue) { 
		_before = newValue;
	}
	public String getafter() { 
		return _after;
	}
	public void setafter(String newValue) { 
		_after = newValue;
	}
	public Date getdateAndTime() { 
		return _dateAndTime;
	}
	public void setdateAndTime(Date newValue) { 
		_dateAndTime = newValue;
	}
	public String getuserName() { 
		return _userName;
	}
	public void setuserName(String newValue) { 
		_userName = newValue;
	}
	public void putToCache(String key, CacheServer server) throws FastCacheException {
		DataArray da = writeCache();
		item.putDataArray(da);
		server.putValue(key, item);
		item.DataItemClear();
	}
	public void getFromCache(String key, CacheServer server) throws FastCacheException {
		DataItem item = server.getValue(key);
		DataArray da = new DataArray();
		item.getDataArray(da);
		readCache(da);
		item.DataItemClear();
	}
	public DataArray writeCache() throws FastCacheException {
		int sa_idx = 0;
		DataArray da = new DataArray(DataItem.DATAITEMDATAITEM, 5);
		item.putString(_fieldName);
		da.setDataItem(sa_idx++, item);
		item.putString(_before);
		da.setDataItem(sa_idx++, item);
		item.putString(_after);
		da.setDataItem(sa_idx++, item);
		item.putDate(_dateAndTime);
		da.setDataItem(sa_idx++, item);
		item.putString(_userName);
		da.setDataItem(sa_idx++, item);
		item.DataItemClear();
		return da;
	}
	public void readCache(DataArray in) throws FastCacheException {
		int sa_idx = 0;
		in.getDataItem(sa_idx++, item);
		_fieldName = item.getString();
		in.getDataItem(sa_idx++, item);
		_before = item.getString();
		in.getDataItem(sa_idx++, item);
		_after = item.getString();
		in.getDataItem(sa_idx++, item);
		_dateAndTime = item.getDate();
		in.getDataItem(sa_idx++, item);
		_userName = item.getString();
	}
	public void writeObject(byte [] data) throws FastCacheException {
		item.writeObject(data);
		DataArray in = new DataArray();
		item.getDataArray(in);
		readCache(in);
	}
	public byte [] readObject() throws FastCacheException, IOException {
		DataArray requestDA = writeCache();
		item.putDataArray(requestDA);
		return item.readObject();
	}
	private String _fieldName =  new String();
	private String _before =  new String();
	private String _after =  new String();
	private Date _dateAndTime =  new Date();
	private String _userName =  new String();
	private DataItem item = new DataItem();
}

